<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ScriptSDK</name>
    </assembly>
    <members>
        <member name="M:StealthAPI.Converters.ToDateTime(System.Single)">
            <summary>
            Converts a TDateTime from Delphi to a DateTime in .NET
            For more info see: http://docs.embarcadero.com/products/rad_studio/delphiAndcpp2009/HelpUpdate2/EN/html/delphivclwin32/System_TDateTime.html
            </summary>
            <param name="tDateTime"></param>
            <returns></returns>
        </member>
        <member name="M:StealthAPI.Converters.ToDateTime(System.Double)">
            <summary>
            Converts a TDateTime from Delphi to a DateTime in .NET
            For more info see: http://docs.embarcadero.com/products/rad_studio/delphiAndcpp2009/HelpUpdate2/EN/html/delphivclwin32/System_TDateTime.html
            </summary>
            <param name="tDateTime"></param>
            <returns></returns>
        </member>
        <member name="M:StealthAPI.Converters.ToDouble(System.DateTime)">
            <summary>
            Converts a datetime.datetime from Python to a TDateTimein Delphi.
            For more info see: http://docs.embarcadero.com/products/rad_studio/delphiAndcpp2009/HelpUpdate2/EN/html/delphivclwin32/System_TDateTime.html
            </summary>
            <param name="dateTime"></param>
        </member>
        <member name="M:StealthAPI.Converters.SplitN``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            A generator to divide a sequence into chunks of n units.
            </summary>
            <param name="seq"></param>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="T:StealthAPI.AboutData">
            <summary>
            About data
            </summary>
        </member>
        <member name="T:StealthAPI.EventTypes">
            <summary>
            Event Enumeration
            </summary>
        </member>
        <member name="M:StealthAPI.Marshaler.MarshalToObject``1(System.Byte[])">
            <summary>
            Перевести массив байт в объект
            </summary>
            <param name="buffer">Массив байт</param>
            <returns>Результирующий объект</returns>
        </member>
        <member name="F:StealthAPI.Stealth.StealthAttachTimeout">
            <summary>
            Connect timeout. Default 1 minute
            </summary>
        </member>
        <member name="T:ScriptSDK.Attributes.BaseAttributes">
            <summary>
            Another way to store properties which was inspired by runuo.
            </summary>
            <example>
            Sample shows how to make a custom attributes storing some armor informations.
            <code language="CSharp">
            <![CDATA[
            public enum ArmorAttribute
            {
                LowerStatReq = 0x00000001,
                SelfRepair = 0x00000002,
                MageArmor = 0x00000004,
                DurabilityBonus = 0x00000008,
                SoulCharge = 0x00000010,
                ReactiveParalyze = 0x00000020
            }
            
            public sealed class ArmorAttributes : BaseAttributes
            {
                #region Parser
            
                protected override void Parse()
                {
                    var x = Enum.GetValues(typeof(ArmorAttribute));
                    foreach (var e in x)
                    {
                        _data.Add((ArmorAttribute)e, 0);
                    }
            
                    this[ArmorAttribute.MageArmor] = (ClilocHelper.Contains(_lastmetatable, 1060437));
                    this[ArmorAttribute.SelfRepair] = (ClilocHelper.GetIndex(_lastmetatable, 1060450) > -1) ? ClilocHelper.GetParams(_lastmetatable, 1060450)[0] : 0;
                    this[ArmorAttribute.SoulCharge] = (ClilocHelper.GetIndex(_lastmetatable, 1113630) > -1) ? ClilocHelper.GetParams(_lastmetatable, 1113630)[0] : 0;
                    this[ArmorAttribute.ReactiveParalyze] = (ClilocHelper.Contains(_lastmetatable, 1112364));
                    this[ArmorAttribute.LowerStatReq] = (ClilocHelper.GetIndex(_lastmetatable, 1061170) > -1) ? ClilocHelper.GetParams(_lastmetatable, 1061170)[0] : 0;
                    base.Parse();
               } 
                #endregion
            
                #region Constructors 
                public ArmorAttributes(UOEntity owner, List<ClilocItemRec> reader) : base(owner, reader)
                { }
            
                public ArmorAttributes(UOEntity owner) : base(owner, owner.Properties)
                { }  
                #endregion
            
                #region Properties 
                public int LowerStatReq { get { return this[ArmorAttribute.LowerStatReq]; } }
            
                public int SelfRepair { get { return this[ArmorAttribute.SelfRepair]; } }
            
                public bool MageArmor { get { return this[ArmorAttribute.MageArmor]; } }
            
                public int DurabilityBonus { get { return this[ArmorAttribute.DurabilityBonus]; } }
            
                public int SoulCharge { get { return this[ArmorAttribute.SoulCharge]; } } 
            
                public int ReactiveParalyze { get { return this[ArmorAttribute.ReactiveParalyze]; } } 
                #endregion
            }
            ]]>
            </code>
            </example>
        </member>
        <member name="M:ScriptSDK.Attributes.BaseAttributes.#ctor(ScriptSDK.UOEntity,System.Collections.Generic.List{StealthAPI.ClilocItemRec})">
            <summary>
            Default Constructor
            </summary>
            <param name="owner"></param>
            <param name="reader"></param>
        </member>
        <member name="P:ScriptSDK.Attributes.BaseAttributes._data">
            <summary>
            Stores data internal for the property mapping.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.BaseAttributes.Owner">
            <summary>
            Stores the refered owner.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.BaseAttributes._lastmetatable">
            <summary>
            Stores a copy of last properties passed to the parser
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.BaseAttributes.Item(System.Enum)">
            <summary>
            Accessor for generic property mapper.
            </summary>
            <param name="attribute"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.BaseAttributes.Parse">
            <summary>
            Generic Parser method for later datamapping 
            </summary>
        </member>
        <member name="T:ScriptSDK.Attributes.JournalEntry">
            <summary>
            Journalentry class expose handle, actions and properties about single journal messages.
            </summary>
        </member>
        <member name="M:ScriptSDK.Attributes.JournalEntry.#ctor(System.Boolean)">
            <summary>
            Default constructor
            </summary>
            <param name="ApiCall"></param>
        </member>
        <member name="P:ScriptSDK.Attributes.JournalEntry.Count">
            <summary>
            Stores amount of equal lines.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.JournalEntry.ID">
            <summary>
            Stores ID of line.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.JournalEntry.Index">
            <summary>
            Stores index of line.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.JournalEntry.MsgType">
            <summary>
            Stores message type.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.JournalEntry.Type">
            <summary>
            Stores line type.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.JournalEntry.Name">
            <summary>
            Stores content of line.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.JournalEntry.Color">
            <summary>
            Stores color of text.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.JournalEntry.Font">
            <summary>
            Stores font ID of line.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.JournalEntry.Timestamp">
            <summary>
            Stores timestamp of line
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.JournalEntry.Valid">
            <summary>
            Stores if entry is valid.
            </summary>
        </member>
        <member name="T:ScriptSDK.Attributes.JournalHelper">
            <summary>
            Class expose handles, actions and properties about journal messager system.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.JournalHelper.P">
            <summary>
            returns reference to player.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.JournalHelper.Logging">
            <summary>
            Enable or disable additional logging here.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.JournalHelper.Logs">
            <summary>
            Returns logged journal entries.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.JournalHelper.SeniorIndex">
            <summary>
            Returns the senior index of journal.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.JournalHelper.JuniorIndex">
            <summary>
            Returns the junior index of journal.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.JournalHelper.LastMessage">
            <summary>
            Returns last incoming message.
            </summary>
        </member>
        <member name="M:ScriptSDK.Attributes.JournalHelper.GetJournal">
            <summary>
            Returns instance of journal system.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.JournalHelper.Ignore(System.String,ScriptSDK.Data.JournalType)">
            <summary>
            Adds user to ignore list.
            </summary>
            <param name="user"></param>
            <param name="type"></param>
        </member>
        <member name="M:ScriptSDK.Attributes.JournalHelper.ClearIgnore(ScriptSDK.Data.JournalType)">
            <summary>
            Clears ignore list.
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:ScriptSDK.Attributes.JournalHelper.AddMessage(System.String,ScriptSDK.Data.JournalType)">
            <summary>
            Function sends message to specific message system.
            </summary>
            <param name="Msg"></param>
            <param name="type"></param>
        </member>
        <member name="M:ScriptSDK.Attributes.JournalHelper.ClearJournal(ScriptSDK.Data.JournalType)">
            <summary>
            Delete passed journal type.
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:ScriptSDK.Attributes.JournalHelper.GetJournalLine(System.UInt32)">
            <summary>
            Returns text passed through index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.JournalHelper.SetJournalLine(System.UInt32,System.String)">
            <summary>
            Manipulates journal line by index.
            </summary>
            <param name="index"></param>
            <param name="Msg"></param>
        </member>
        <member name="M:ScriptSDK.Attributes.JournalHelper.WaitForJournalLine(System.DateTime,System.String,System.Int32,ScriptSDK.Data.JournalType,ScriptSDK.Attributes.JournalEntry@)">
            <summary>
            Function tries to check if a certain journal message appeared within ppassed journal system and returns line as output.
            </summary>
            <param name="StartTime"></param>
            <param name="content"></param>
            <param name="maxdelayinms"></param>
            <param name="type"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.JournalHelper.WaitForJournalLine(System.DateTime,System.String,System.Int32,ScriptSDK.Data.JournalType,System.Int32@)">
            <summary>
             Function tries to check if a certain journal message appeared within ppassed journal system and returns line ID as output.
            </summary>
            <param name="StartTime"></param>
            <param name="content"></param>
            <param name="maxdelayinms"></param>
            <param name="type"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.JournalHelper.WaitForJournalLine(System.DateTime,System.String,System.Int32,ScriptSDK.Data.JournalType)">
            <summary>
             Function tries to check if a certain journal message appeared within ppassed journal system.
            </summary>
            <param name="StartTime"></param>
            <param name="content"></param>
            <param name="maxdelayinms"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.JournalHelper.InJournal(System.String,ScriptSDK.Attributes.JournalEntry@)">
            <summary>
            Function returns if journal contains content. "Result" returns message.
            </summary>
            <param name="content"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.JournalHelper.InJournal(System.String,System.Int32@)">
            <summary>
            Function returns if journal contains content. "Result" returns line ID.
            </summary>
            <param name="content"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.JournalHelper.InJournal(System.String)">
            <summary>
            Function returns if journal contains content.
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.JournalHelper.InJournal(System.String,System.DateTime,System.DateTime)">
            <summary>
            Function returns if content was in journal between both timestamps.
            </summary>
            <param name="content"></param>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.JournalHelper.InJournal(System.String,System.DateTime,System.DateTime,ScriptSDK.Attributes.JournalEntry@)">
            <summary>
            Function returns if content was in journal between both timestamps. "Result" returns journal message.
            </summary>
            <param name="content"></param>
            <param name="start"></param>
            <param name="end"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.JournalHelper.InJournal(System.String,System.DateTime,System.DateTime,System.Int32@)">
            <summary>
            Function returns if content was in journal between both timestamps. "Result" returns line ID.
            </summary>
            <param name="content"></param>
            <param name="start"></param>
            <param name="end"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="T:ScriptSDK.Attributes.MovingHelper">
            <summary>
            Moving helper class expose handles, actions and properties, wich allow a player to pathfind around the world.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.MovingHelper.MoveThroughNPC">
            <summary>
            Gets or Sets if player should move over NPC. Value describes the amount of required stamina.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.MovingHelper.AutoOpenDoors">
            <summary>
            Enable or disable if player automaticly should open doors.
            </summary>
        </member>
        <member name="M:ScriptSDK.Attributes.MovingHelper.GetMovingHelper">
            <summary>
            Returns instance of pathfinding engine.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.MovingHelper.GetPathArray(System.UInt16,System.UInt16,System.Boolean,System.Int32)">
            <summary>
            Generates a path array about waypoint from player to destination.
            </summary>
            <param name="destX"></param>
            <param name="destY"></param>
            <param name="optimized"></param>
            <param name="accuracy"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.MovingHelper.GetPathArray3D(System.UInt16,System.UInt16,System.SByte,System.UInt16,System.UInt16,System.SByte,System.Byte,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Generates a path array about waypoint from start to finish.
            </summary>
            <param name="startX"></param>
            <param name="startY"></param>
            <param name="startZ"></param>
            <param name="finishX"></param>
            <param name="finishY"></param>
            <param name="finishZ"></param>
            <param name="worldNum"></param>
            <param name="accuracyXY"></param>
            <param name="accuracyZ"></param>
            <param name="run"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.MovingHelper.GetPathArray3D(ScriptSDK.Data.Point3D,ScriptSDK.Data.Point3D,System.Byte,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Generates a path array about waypoint from start to finish.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <param name="World"></param>
            <param name="accuracyXY"></param>
            <param name="accuracyZ"></param>
            <param name="run"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.MovingHelper.CalcCoord(System.Int32,System.Int32,System.Byte,System.Int32@,System.Int32@)">
            <summary>
            Calculates next coords from your location and direction.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="dir"></param>
            <param name="x2"></param>
            <param name="y2"></param>
        </member>
        <member name="M:ScriptSDK.Attributes.MovingHelper.ClearBadLocationList">
            <summary>
            Clears the bad location list.
            </summary>
        </member>
        <member name="M:ScriptSDK.Attributes.MovingHelper.ClearBadObjectList">
            <summary>
            Clears the bad object list.
            </summary>
        </member>
        <member name="M:ScriptSDK.Attributes.MovingHelper.Step(System.Byte,System.Boolean)">
            <summary>
            Performs a single step in desired direction.
            </summary>
            <param name="direction"></param>
            <param name="running"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.MovingHelper.StepQ(System.Byte,System.Boolean)">
            <summary>
            Performs a single step in desired direction.<br/> This is pure guess but i guess Q stands for silent moving?
            </summary>
            <param name="direction"></param>
            <param name="running"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.MovingHelper.PredictedY">
            <summary>
            Predicts next Y.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.MovingHelper.PredictedZ">
            <summary>
            Predicts next Z.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.MovingHelper.PredictedX">
            <summary>
            Predicts next X.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.MovingHelper.GetLastStepQUsedDoor">
            <summary>
            Returns ID of last opened door.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.MovingHelper.SetBadLocation(System.UInt16,System.UInt16)">
            <summary>
            Sets point as bad location.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:ScriptSDK.Attributes.MovingHelper.SetGoodLocation(System.UInt16,System.UInt16)">
            <summary>
            Sets point as good location.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:ScriptSDK.Attributes.MovingHelper.SetBadObject(System.UInt16,System.UInt16,System.Byte)">
            <summary>
            Sets all objects of type\color within radius as bad object.
            </summary>
            <param name="objType"></param>
            <param name="color"></param>
            <param name="radius"></param>
        </member>
        <member name="M:ScriptSDK.Attributes.MovingHelper.MoveXYZ(System.UInt16,System.UInt16,System.SByte,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Moves player to destined location.
            </summary>
            <param name="xDst"></param>
            <param name="yDst"></param>
            <param name="zDst"></param>
            <param name="accuracyXY"></param>
            <param name="accuracyZ"></param>
            <param name="running"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.MovingHelper.newMoveXY(System.UInt16,System.UInt16,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Moves player to destined location with better precision.
            </summary>
            <param name="xDst"></param>
            <param name="yDst"></param>
            <param name="optimized"></param>
            <param name="accuracy"></param>
            <param name="running"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.MovingHelper.MoveXY(System.UInt16,System.UInt16,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Moves player to destined location.
            </summary>
            <param name="xDst"></param>
            <param name="yDst"></param>
            <param name="optimized"></param>
            <param name="accuracy"></param>
            <param name="running"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.MovingHelper.PredictedDirection">
            <summary>
            Predict next direction
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.MovingHelper.CalcDir(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculates direction.
            </summary>
            <param name="xFrom"></param>
            <param name="yFrom"></param>
            <param name="xTo"></param>
            <param name="yTo"></param>
            <returns></returns>
        </member>
        <member name="T:ScriptSDK.Attributes.Paperdoll">
            <summary>
            Paperdoll class is a dynamic class allowing the refered mobile to 
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Paperdoll.OneHanded">
            <summary>
            Returns object found Left-Hand Layer
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Paperdoll.TwoHanded">
            <summary>
            Returns object found Right-Hand Layer
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Paperdoll.Shoes">
            <summary>
            Returns object found Shoes Layer
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Paperdoll.Pants">
            <summary>
            Returns object found Pants Layer
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Paperdoll.Shirt">
            <summary>
            Returns object found Shirt Layer
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Paperdoll.Helm">
            <summary>
            Returns object found Helm Layer
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Paperdoll.Gloves">
            <summary>
            Returns object found Gloves Layer
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Paperdoll.Ring">
            <summary>
            Returns object found Ring Layer
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Paperdoll.Talisman">
            <summary>
            Returns object found Talisman Layer
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Paperdoll.Neck">
            <summary>
            Returns object found Neck Layer
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Paperdoll.Hair">
            <summary>
            Returns object found Hair Layer
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Paperdoll.Waist">
            <summary>
            Returns object found Waist Layer
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Paperdoll.InnerTorso">
            <summary>
            Returns object found Inner Torso Layer
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Paperdoll.Bracelet">
            <summary>
            Returns object found Bracelet Layer
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Paperdoll.Face">
            <summary>
            Returns object found Face Layer
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Paperdoll.FacialHair">
            <summary>
            Returns object found Facial Hair Layer
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Paperdoll.MiddleTorso">
            <summary>
            Returns object found Middle Torso Layer
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Paperdoll.Earrings">
            <summary>
            Returns object found Earrings Layer
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Paperdoll.Arms">
            <summary>
            Returns object found Arms Layer
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Paperdoll.Cloak">
            <summary>
            Returns object found Cloak Layer
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Paperdoll.Backpack">
            <summary>
            Returns object found Backpack Layer
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Paperdoll.OuterTorso">
            <summary>
            Returns object found Outer Torso Layer
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Paperdoll.OuterLegs">
            <summary>
            Returns object found Outer Legs Layer
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Paperdoll.InnerLegs">
            <summary>
            Returns object found Inner Legs Layer
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Paperdoll.Mount">
            <summary>
            Returns object found Mount Layer
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Paperdoll.ShopBuy">
            <summary>
            Returns object found Shop (Buy-View) Layer
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Paperdoll.ShopResale">
            <summary>
            Returns object found Shop (Resale-View) Layer
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Paperdoll.ShopSell">
            <summary>
            Returns object found Shop (Sell-View) Layer
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Paperdoll.Bank">
            <summary>
            Returns object found Bank Layer
            </summary>
        </member>
        <member name="M:ScriptSDK.Attributes.Paperdoll.GetObject(ScriptSDK.Data.Layer)">
            <summary>
            
            </summary>
            <param name="layer"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.Paperdoll.GetPaperdoll(ScriptSDK.Mobiles.Mobile)">
            <summary>
            Singleton designed function to get reference of paperdoll object.
            </summary>
            <param name="owner"></param>
            <returns></returns>
        </member>
        <member name="P:ScriptSDK.Attributes.Paperdoll.TotalLMC">
            <summary>
            Returns total counted amount of Lower Mana Cost through paperdoll.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Paperdoll.TotalFC">
            <summary>
            Returns total counted amount of Faster Casting through paperdoll.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Paperdoll.TotalFCR">
            <summary>
            Returns total counted amount of Faster Cast Recovery through paperdoll.
            </summary>
        </member>
        <member name="T:ScriptSDK.Attributes.PartyHelper">
            <summary>
            PartyHelper exposes handles, actions and properties where player can interact through party system.
            </summary>
        </member>
        <member name="M:ScriptSDK.Attributes.PartyHelper.#ctor(ScriptSDK.Mobiles.PlayerMobile)">
            <summary>
            Default constructor.
            </summary>
            <param name="owner"></param>
        </member>
        <member name="P:ScriptSDK.Attributes.PartyHelper.Members">
            <summary>
            Returns a list of mobiles in player party.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.PartyHelper.AllowLooting">
            <summary>
            Enable or disable the lootrights on party menu.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.PartyHelper.Enabled">
            <summary>
            Returns if party is alive.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.PartyHelper.Event_OnInvitation">
            <summary>
            Event which fires when player gets invitation to a new party.
            </summary>
        </member>
        <member name="M:ScriptSDK.Attributes.PartyHelper.GetParty">
            <summary>
            Returns reference of party.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.PartyHelper.Accept">
            <summary>
            Accepts a valid party invitation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.PartyHelper.Decline">
            <summary>
            Declines a valid party invitation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.PartyHelper.Leave">
            <summary>
            Leaves party if possible.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.PartyHelper.Invite(ScriptSDK.Mobiles.Mobile)">
            <summary>
            Invites mobile user to party.
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.PartyHelper.Remove(ScriptSDK.Mobiles.Mobile)">
            <summary>
            Removes mobile user from party.
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.PartyHelper.Say(System.String)">
            <summary>
            Allows to send messages to party.
            </summary>
            <param name="Text"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.PartyHelper.Say(System.String,ScriptSDK.Mobiles.Mobile)">
            <summary>
            Allows to send a private message to passed member in party.
            </summary>
            <param name="Text"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="T:ScriptSDK.Attributes.Skill">
            <summary>
            Skill class describes a single non useable skill with handles and properties.
            </summary>
        </member>
        <member name="M:ScriptSDK.Attributes.Skill.#ctor(ScriptSDK.Attributes.SkillHelper,System.String,ScriptSDK.Data.SkillName)">
            <summary>
            Default constructor.
            </summary>
            <param name="owner"></param>
            <param name="name"></param>
            <param name="skillname"></param>
        </member>
        <member name="P:ScriptSDK.Attributes.Skill._owner">
            <summary>
            Stores reference to skill list.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Skill._lock">
            <summary>
            Stores internal skill lock state.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Skill.Name">
            <summary>
            Stores skill name as text.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Skill.SkillName">
            <summary>
            Stores skill name as enumeration.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Skill.Cap">
            <summary>
            Returns the skill cap.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Skill.Value">
            <summary>
            Returns skill value.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.Skill.SkillLock">
            <summary>
            Gets or set skill lock state. Getter only can be used when once setted per script instance.
            </summary>
        </member>
        <member name="M:ScriptSDK.Attributes.Skill.ToString">
            <summary>
            Returns skill properly parsed as text.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ScriptSDK.Attributes.SkillHelper">
            <summary>
            Skillhelper exposes handles, actions and properties about skill system.
            </summary>
        </member>
        <member name="M:ScriptSDK.Attributes.SkillHelper.#ctor(ScriptSDK.Mobiles.PlayerMobile)">
            <exclude />
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper._instance">
            <exclude />
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper._skills">
            <exclude />
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper._uskills">
            <exclude />
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper._owner">
            <exclude />
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.LastSkill">
            <summary>
            returns reference to last used skill.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Anatomy">
            <summary>
            Stores useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.AnimalTaming">
            <summary>
            Stores useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.ArmsLore">
            <summary>
            Stores useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Begging">
            <summary>
            Stores useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.DetectHidden">
            <summary>
            Stores useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Discordance">
            <summary>
            Stores useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.EvaluatingIntelligence">
            <summary>
            Stores useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Forensics">
            <summary>
            Stores useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Herding">
            <summary>
            Stores useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Meditation">
            <summary>
            Stores useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Stealth">
            <summary>
            Stores useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.RemoveTrap">
            <summary>
            Stores useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Imbuing">
            <summary>
            Stores useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Snooping">
            <summary>
            Stores useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.AnimalLore">
            <summary>
            Stores useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.ItemID">
            <summary>
            Stores useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Peacemaking">
            <summary>
            Stores useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Hiding">
            <summary>
            Stores useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Provocation">
            <summary>
            Stores useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Inscription">
            <summary>
            Stores useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Poisoning">
            <summary>
            Stores useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.SpiritSpeak">
            <summary>
            Stores useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Stealing">
            <summary>
            Stores useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.TasteIdentification">
            <summary>
            Stores useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Tracking">
            <summary>
            Stores useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Alchemy">
            <summary>
            Stores non useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Parry">
            <summary>
            Stores non useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Blacksmith">
            <summary>
            Stores non useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Fletching">
            <summary>
            Stores non useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Camping">
            <summary>
            Stores non useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Carpentry">
            <summary>
            Stores non useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Cartography">
            <summary>
            Stores non useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Cooking">
            <summary>
            Stores non useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Healing">
            <summary>
            Stores non useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Fishing">
            <summary>
            Stores non useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Lockpicking">
            <summary>
            Stores non useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Magery">
            <summary>
            Stores non useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.MagicResist">
            <summary>
            Stores non useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Tactics">
            <summary>
            Stores non useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Musicianship">
            <summary>
            Stores non useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Archery">
            <summary>
            Stores non useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Tailoring">
            <summary>
            Stores non useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Tinkering">
            <summary>
            Stores non useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Veterinary">
            <summary>
            Stores non useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Swords">
            <summary>
            Stores non useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Macing">
            <summary>
            Stores non useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Fencing">
            <summary>
            Stores non useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Wrestling">
            <summary>
            Stores non useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Lumberjacking">
            <summary>
            Stores non useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Mining">
            <summary>
            Stores non useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Necromancy">
            <summary>
            Stores non useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Focus">
            <summary>
            Stores non useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Chivalry">
            <summary>
            Stores non useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Bushido">
            <summary>
            Stores non useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Ninjitsu">
            <summary>
            Stores non useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Spellweaving">
            <summary>
            Stores non useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Mysticism">
            <summary>
            Stores non useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.Throwing">
            <summary>
            Stores non useable skill data.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.SkillHelper.TotalValue">
            <summary>
            Stores total amount of used skillpoints.
            </summary>
        </member>
        <member name="M:ScriptSDK.Attributes.SkillHelper.GetSkills">
            <summary>
            Returns reference to skill system.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.SkillHelper.UseSkill(ScriptSDK.Data.SkillName)">
            <summary>
            Function wich calls a Skill action (only works on useable skills).
            </summary>
            <param name="sk"></param>
            <returns></returns>
        </member>
        <member name="T:ScriptSDK.Attributes.UseableSkill">
            <summary>
            Object structure describes a useable skill with handler behind.
            </summary>
        </member>
        <member name="M:ScriptSDK.Attributes.UseableSkill.#ctor(ScriptSDK.Attributes.SkillHelper,System.String,ScriptSDK.Data.SkillName,System.TimeSpan)">
            <summary>
            Default Constructor, should only be used by SkillHelper class or in exception for custom skills.
            </summary>
            <param name="owner"></param>
            <param name="name"></param>
            <param name="skillname"></param>
            <param name="delay"></param>
        </member>
        <member name="P:ScriptSDK.Attributes.UseableSkill.Delay">
            <summary>
            Skill action delay, can be customized by user input.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.UseableSkill.LastUsed">
            <summary>
            Timestamp when skill last time has been used. In emergency cases can be customized.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.UseableSkill.Useable">
            <summary>
            Returns if last usage + delay is is the past. True means skill "could" be used again.
            Be aware, that this values are setted up by SDK. They can differ against your used server.
            </summary>
        </member>
        <member name="M:ScriptSDK.Attributes.UseableSkill.Use">
            <summary>
            Use the Skill if possible, pass result to event and fires event if possible.
            </summary>
            <returns></returns>
        </member>
        <member name="E:ScriptSDK.Attributes.UseableSkill.OnUse">
            <summary>
            Describes Event handled when skill has been used.
            </summary>
        </member>
        <member name="T:ScriptSDK.Attributes.TargetHelper">
            <summary>
            Targethelper class exposes handles, actions and properties about targeting system.
            </summary>
        </member>
        <member name="M:ScriptSDK.Attributes.TargetHelper.WaitForTarget(System.Int32)">
            <summary>
            Functions allows dynamic to check if target cursor appear within delay.
            </summary>
            <param name="MaxWaitTimeMS"></param>
            <returns></returns>
        </member>
        <member name="E:ScriptSDK.Attributes.TargetHelper.OnTarget">
            <summary>
            Event wich is fired on Targeting anything.
            </summary>
        </member>
        <member name="M:ScriptSDK.Attributes.TargetHelper.GetTarget">
            <summary>
            Returns reference of target helper system.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.TargetHelper.TargetTo(ScriptSDK.Serial)">
            <summary>
            Method allows to target to an object via active cursor.
            </summary>
            <param name="serial"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.TargetHelper.TargetTo(ScriptSDK.Data.Point3D)">
            <summary>
            Method allows to target to a location via active cursor.
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.TargetHelper.TargetTo(System.UInt16,ScriptSDK.Data.Point3D)">
            <summary>
            Method allows to target to an tile location via active cursor.
            </summary>
            <param name="Tile"></param>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.TargetHelper.AutoTargetTo(ScriptSDK.Serial)">
            <summary>
            Sets Autotarget onto serial wich will wait until cursor appears.
            </summary>
            <param name="serial"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.TargetHelper.AutoTargetTo(ScriptSDK.Data.Point3D)">
            <summary>
            Sets Autotarget onto location wich will wait until cursor appears.
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.TargetHelper.AutoTargetTo(System.UInt16,ScriptSDK.Data.Point3D)">
            <summary>
            Sets Autotarget onto tile location wich will wait until cursor appears.
            </summary>
            <param name="Tile"></param>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.TargetHelper.AutoTargetSelf">
            <summary>
            Sets Autotarget onto players.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.TargetHelper.AutoTargetType(System.UInt16)">
            <summary>
            TODO : NOT WORKING YET.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.TargetHelper.AutoTargetLast">
            <summary>
            Performs autotarget to last active target.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.TargetHelper.AutoTargetTypeFromGround(System.UInt16)">
            <summary>
            Applies auto target to random object by given type from ground.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.TargetHelper.VCursorToObjectID">
            <summary>
            Handles virtual target cursor onto objects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.TargetHelper.VCursorToEntity">
            <summary>
            Handles virtual target cursor onto objects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.TargetHelper.VCursorToItem">
            <summary>
            Handles virtual target cursor onto objects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.TargetHelper.VCursorToGenericObject``1">
            <summary>
            Handles virtual target cursor onto objects.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.TargetHelper.VCursorToMobile">
            <summary>
            Handles virtual target cursor onto objects.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.TargetHelper.VCursorToLocation">
            <summary>
            Handles virtual target cursor onto location.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.TargetHelper.VCursorToTile">
            <summary>
            Handles virtual target cursor onto tile location.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ScriptSDK.Attributes.TradeHelper">
            <summary>
            Object expose handles, actions and properties about trading system.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.TradeHelper._owner">
            <summary>
            Stores reference to trading player.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.TradeHelper.ActiveTrades">
            <summary>
            Returns amount of active trades.
            </summary>
        </member>
        <member name="M:ScriptSDK.Attributes.TradeHelper.GetTrade">
            <summary>
            Returns reference of trading system.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.TradeHelper.GetOpponent(System.Byte)">
            <summary>
            Returns reference to trading partner.
            </summary>
            <param name="TradeNumber"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.TradeHelper.Confirm(System.Byte)">
            <summary>
            Confirms trade.
            </summary>
            <param name="TradeNumber"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.TradeHelper.Cancel(System.Byte)">
            <summary>
            Cancel trade.
            </summary>
            <param name="TradeNumber"></param>
            <returns></returns>
        </member>
        <member name="T:ScriptSDK.Attributes.UOClilocAttributes">
            <summary>
            Equivalent designed class to UOStringAttributes but designed for localized properties.
            </summary>
            <example>
            <code language="CSharp">
            <![CDATA[
            ///<summary>
            ///Code Sample object for assigning a UOClilocAttributes as property.
            ///</summary>
            public class TestItem : Item
            {
                #pragma warning disable 1591
                public TestItem(uint ObjectID) : base(ObjectID)
                #pragma warning restore 1591
                { }
            
                #pragma warning disable 1591
                public TestItem(Serial serial) : base(serial)
                #pragma warning restore 1591
                { }
            
                /// <summary>
                /// Stores specialattributes
                /// </summary>
                public FreedomAttributes SpecialAttributes { get; protected set; }
            
                /// <summary>
                /// Overrides UpdateLocalizedProperties and assign SpecialAttributes.
                /// </summary>
                /// <returns></returns>
                public override bool UpdateLocalizedProperties()
                {
                    var result = base.UpdateLocalizedProperties();
                    SpecialAttributes = new FreedomAttributes(Tooltip, this);
                    return result;
                }
            }
            
            ///<summary>
            ///Very free sample of making UOClilocAttributes
            ///</summary>
            public class FreedomAttributes : UOClilocAttributes
            {
                /// <summary>
                /// Stores if the Item is a custom special item
                /// </summary>
                public bool IsSpecialItem { get; protected set; }
            
                private FreedomAttributes(List<ClilocItemRec> properties) : base(properties)
                { }
            
                /// <summary>
                /// Default constructor.
                /// </summary>
                /// <param name="properties"></param>
                /// <param name="owner"></param>
                public FreedomAttributes(List<ClilocItemRec> properties, UOEntity owner = null) : base(properties, owner)
                { }
            
                /// <summary>
                /// Parsing string and finds out if item tooltip contains the wording "special item".
                /// </summary> 
                /// <param name="properties"></param>
                protected override void Parse(List<ClilocItemRec> properties)
                {
                    if (properties[0].ClilocID = 12345678)
                        IsSpecialItem = true;
                    else
                        IsSpecialItem = false;
                }
            }
            ]]>
            </code>
            </example>
        </member>
        <member name="M:ScriptSDK.Attributes.UOClilocAttributes.#ctor(System.Collections.Generic.List{StealthAPI.ClilocItemRec},ScriptSDK.UOEntity)">
            <summary>
            Default Constructor
            </summary>
            <param name="properties"></param>
            <param name="owner"></param>
        </member>
        <member name="M:ScriptSDK.Attributes.UOClilocAttributes.#ctor(System.Collections.Generic.List{StealthAPI.ClilocItemRec})">
            <summary>
            More simpler constructor but doesnt store any owner.
            </summary>
            <param name="properties"></param>
        </member>
        <member name="P:ScriptSDK.Attributes.UOClilocAttributes._uoeowner">
            <summary>
            Stores the owner of attribute.
            </summary>
        </member>
        <member name="M:ScriptSDK.Attributes.UOClilocAttributes.Parse(System.Collections.Generic.List{StealthAPI.ClilocItemRec})">
            <summary>
            Designed generic function to parse localized properties to custom properties.
            </summary>
            <param name="properties"></param>
        </member>
        <member name="T:ScriptSDK.Attributes.UOStringAttribute">
            <summary>
            Model of custom string attribute allows a more free parsing of data to be attributes then localized attributes.
            </summary>
            <example>
            <code language="CSharp">
            <![CDATA[
            ///<summary>
            ///Code Sample object for assigning a UOStringAttribute as property.
            ///</summary>
            public class TestItem : Item
            {
                #pragma warning disable 1591
                public TestItem(uint ObjectID) : base(ObjectID)
                #pragma warning restore 1591
                { }
            
                #pragma warning disable 1591
                public TestItem(Serial serial) : base(serial)
                #pragma warning restore 1591
                { }
            
                /// <summary>
                /// Stores specialattributes
                /// </summary>
                public FreedomAttributes SpecialAttributes { get; protected set; }
            
                /// <summary>
                /// Overrides UpdateTextProperties and assign SpecialAttributes.
                /// </summary>
                /// <returns></returns>
                public override bool UpdateTextProperties()
                {
                    var result = base.UpdateTextProperties();
                    SpecialAttributes = new FreedomAttributes(Tooltip, this);
                    return result;
                }
            }
            
            ///<summary>
            ///Very free sample of making UOStringAttribute
            ///</summary>
            public class FreedomAttributes : UOStringAttribute
            {
                /// <summary>
                /// Stores if the Item is a custom special item
                /// </summary>
                public bool IsSpecialItem { get; protected set; }
            
                private FreedomAttributes(string properties) : base(properties)
                { }
            
                /// <summary>
                /// Default constructor.
                /// </summary>
                /// <param name="properties"></param>
                /// <param name="owner"></param>
                public FreedomAttributes(string properties, UOEntity owner = null) : base(properties, owner)
                { }
            
                /// <summary>
                /// Parsing string and finds out if item tooltip contains the wording "special item".
                /// </summary> 
                /// <param name="properties"></param>
                protected override void Parse(string properties)
                {
                    if (Insensitive.Contains(properties, "special item"))
                        IsSpecialItem = true;
                    else
                        IsSpecialItem = false;
                }
            }
            ]]>
            </code>
            </example>
        </member>
        <member name="M:ScriptSDK.Attributes.UOStringAttribute.#ctor(System.String)">
            <summary>
            Constructor with more freedoms but 
            </summary>
            <param name="properties"></param>
        </member>
        <member name="M:ScriptSDK.Attributes.UOStringAttribute.#ctor(System.String,ScriptSDK.UOEntity)">
            <summary>
            Default Constructor.
            </summary>
            <param name="properties"></param>
            <param name="owner"></param>
        </member>
        <member name="P:ScriptSDK.Attributes.UOStringAttribute._uoeowner">
            <summary>
            Stores the owner entity.
            </summary>
        </member>
        <member name="M:ScriptSDK.Attributes.UOStringAttribute.Parse(System.String)">
            <summary>
            Designed generic function to parse string to properties.
            </summary>
            <param name="properties"></param>
        </member>
        <member name="T:ScriptSDK.Attributes.VendorHelper">
            <summary>
            Vendorhelper is a singleton pattern class used by player.
            </summary>
        </member>
        <member name="P:ScriptSDK.Attributes.VendorHelper._owner">
            <summary>
            Stores reference to player.
            </summary>
        </member>
        <member name="M:ScriptSDK.Attributes.VendorHelper.GetVendorHelper">
            <summary>
            Allows to get a reference of singleton pattern.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.VendorHelper.AutoBuy(System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Configuration for auto buy agent.
            </summary>
            <param name="itemType"></param>
            <param name="itemColor"></param>
            <param name="quantity"></param>
        </member>
        <member name="M:ScriptSDK.Attributes.VendorHelper.GetShopList">
            <summary>
            Returns shoplist as string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.VendorHelper.ClearShopList">
            <summary>
            Clears shoplist.
            </summary>
        </member>
        <member name="M:ScriptSDK.Attributes.VendorHelper.AutoBuyEx(System.UInt16,System.UInt16,System.UInt16,System.UInt32,System.String)">
            <summary>
            Allows to configurate the auto buy agent.
            </summary>
            <param name="itemType"></param>
            <param name="itemColor"></param>
            <param name="quantity"></param>
            <param name="price"></param>
            <param name="name"></param>
        </member>
        <member name="M:ScriptSDK.Attributes.VendorHelper.AutoSell(System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Allows to configurate the auto sell agent.
            </summary>
            <param name="itemType"></param>
            <param name="itemColor"></param>
            <param name="quantity"></param>
        </member>
        <member name="T:ScriptSDK.Attributes.VirtueHelper">
            <summary>
            
            </summary>
            <example>
            Sample #1 standalone
            <code language="CSharp">
            <![CDATA[
            // Reads instance of Virtuehelper
            VirtueHelper helper = VirtueHelper.GetVirtues();
            
            //Adding Event to VirtueHelper
            helper.OnUse += (sender, args) =>
            {
                //Write Result to Console
                Console.WriteLine("Result of using {0} is {1}",args.State,args.Virtue);
            };
            
            // Setup the Parser Delay for latency overflow
            helper.ParserDelay = 500;
            
            // Now we try to valor a Champion Skull
            if (helper.Use(Virtue.Valor))
            {
                // We use the new Target system for targeting.
                EntityTarget target = new EntityTarget(1000);
                var result = target.Action(new UOEntity(0x00000017));
                //Write Result to Console
                Console.WriteLine("Result of summoning Champion Spawn is {0}",result);
            }
            ]]>
            </code>
            </example>
            
            <example>
            Sample #2 using player
            <code language="CSharp">
            <![CDATA[
            // Reads instance of Virtuehelper
            PlayerMobile player = PlayerMobile.GetPlayer();
            
            //Adding Event to VirtueHelper
            player.Virtues.OnUse += (sender, args) =>
            {
                //Write Result to Console
                Console.WriteLine("Result of using {0} is {1}", args.State, args.Virtue);
            };
            
            // Setup the Parser Delay for latency overflow
            player.Virtues.ParserDelay = 500;
            
            // Now we try to valor a Champion Skull
            if (player.Virtues.Use(Virtue.Valor))
            {
                EntityTarget target = new EntityTarget(1000);
                var result = target.Action(new UOEntity(0x00000017));
                //Write Result to Console
                Console.WriteLine("Result of summoning Champion Spawn is {0}", result);
            }
            ]]>
            </code>
            </example>
        </member>
        <member name="P:ScriptSDK.Attributes.VirtueHelper.ParserDelay">
            <summary>
            Property describes the parser delay, the system will use between request and use of virtues.
            </summary>
        </member>
        <member name="M:ScriptSDK.Attributes.VirtueHelper.Request">
            <summary>
            Function requests virtues gump via paperdoll, if the player is valid.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.VirtueHelper.Use(StealthAPI.Virtue)">
            <summary>
            Function calls <b>Request()</b> and based on the result click onto Virtues Icon. Then calls event(if assigned).
            Always exposes the current state.
            </summary>
            <param name="virtue"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Attributes.VirtueHelper.GetVirtues">
            <summary>
            Function expose singleton instanced reference of Virtues
            </summary>
            <returns></returns>
        </member>
        <member name="E:ScriptSDK.Attributes.VirtueHelper.OnUse">
            <summary>
            Event allows to add action after handling Use(Virtue)
            </summary>
        </member>
        <member name="T:ScriptSDK.ContextMenus.ContextMenu">
            <summary>
            Object exposes handling for context menus. This class is commonly attached to entities.
            </summary>
        </member>
        <member name="M:ScriptSDK.ContextMenus.ContextMenu.#ctor(ScriptSDK.UOEntity)">
            <summary>
            Default Constructor
            </summary>
            <param name="owner"></param>
        </member>
        <member name="P:ScriptSDK.ContextMenus.ContextMenu.Owner">
            <summary>
            Stores the refered owner.
            </summary>
        </member>
        <member name="P:ScriptSDK.ContextMenus.ContextMenu.Entries">
            <summary>
            Stores the parsed entries of context menu attachments.
            </summary>
        </member>
        <member name="E:ScriptSDK.ContextMenus.ContextMenu.OnClick">
            <summary>
            Event Handler for context menu.
            </summary>
        </member>
        <member name="M:ScriptSDK.ContextMenus.ContextMenu.Click(System.String,System.Boolean)">
            <summary>
            Performs a single click onto context menu.
            </summary>
            <param name="Text"></param>
            <param name="strict"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.ContextMenus.ContextMenu.Click(ScriptSDK.ContextMenus.ContextMenuEntry)">
            <summary>
            Performs a single click onto context menu.
            </summary>
            <param name="entry"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.ContextMenus.ContextMenu.Click(System.UInt32)">
            <summary>
            Performs a single click onto context menu.
            </summary>
            <param name="ClilocID"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.ContextMenus.ContextMenu.Parse">
            <summary>
            Deletes old Context Attachment and generate a new attachment, then parsing the context and store it to the corrosponding object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.ContextMenus.ContextMenu.GetOwner">
            <summary>
            Function returns the refered owner.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.ContextMenus.ContextMenu.OnUse(ScriptSDK.Data.ContextMenuEventArgs)">
            <summary>
            Function handles internal the Click + Event.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="T:ScriptSDK.ContextMenus.ICMEntry">
            <summary>
            Interface for ContextMenuEntry.
            </summary>
        </member>
        <member name="P:ScriptSDK.ContextMenus.ICMEntry.Flags">
            <summary>
            Stores the flag of entry.
            </summary>
        </member>
        <member name="P:ScriptSDK.ContextMenus.ICMEntry.ClilocID">
            <summary>
            Stores the localized TextID
            </summary>
        </member>
        <member name="P:ScriptSDK.ContextMenus.ICMEntry.Tag">
            <summary>
            Stores the Tag of context entry.
            </summary>
        </member>
        <member name="P:ScriptSDK.ContextMenus.ICMEntry.Color">
            <summary>
            Stores the text color of entry.
            </summary>
        </member>
        <member name="P:ScriptSDK.ContextMenus.ICMEntry.Text">
            <summary>
            Stores the native text of entry.
            </summary>
        </member>
        <member name="T:ScriptSDK.ContextMenus.ContextMenuEntry">
            <summary>
            Class expose a design for context menu entries within the context menu system.
            </summary>
        </member>
        <member name="M:ScriptSDK.ContextMenus.ContextMenuEntry.#ctor(System.String,ScriptSDK.ContextMenus.ContextMenu)">
            <summary>
            Default Constructor.
            </summary>
            <param name="properties"></param>
            <param name="owner"></param>
        </member>
        <member name="P:ScriptSDK.ContextMenus.ContextMenuEntry._owner">
            <summary>
            Stores internal the referencing context menu.
            </summary>
        </member>
        <member name="P:ScriptSDK.ContextMenus.ContextMenuEntry.Flags">
            <summary>
            Stores the flag of entry.
            </summary>
        </member>
        <member name="P:ScriptSDK.ContextMenus.ContextMenuEntry.ClilocID">
            <summary>
            Stores the localized TextID
            </summary>
        </member>
        <member name="P:ScriptSDK.ContextMenus.ContextMenuEntry.Tag">
            <summary>
            Stores the Tag of context entry.
            </summary>
        </member>
        <member name="P:ScriptSDK.ContextMenus.ContextMenuEntry.Color">
            <summary>
            Stores the text color of entry.
            </summary>
        </member>
        <member name="P:ScriptSDK.ContextMenus.ContextMenuEntry.Text">
            <summary>
            Stores the native text of entry.
            </summary>
        </member>
        <member name="T:ScriptSDK.Configuration.ContextOptions">
            <summary>
            ContextOptions is a configuration class for context menu system.
            </summary>		
            <example>
            <b>Example #1 </b>
            <code language="CSharp">
            <![CDATA[
                ContextOptions.Initialize();
            ]]>
            </code>
            </example>	
        </member>
        <member name="P:ScriptSDK.Configuration.ContextOptions.AssignedObject">
             <summary>
            Stores reference to current assigned object through context menu system.
             </summary>
        </member>
        <member name="P:ScriptSDK.Configuration.ContextOptions.ParserSymbol">
            <summary>
            Stores the character, the context menu entry parser use for splitting. <br/>
            Should be a character which never appear on tooltip.
            </summary>
        </member>
        <member name="P:ScriptSDK.Configuration.ContextOptions.ParserDelay">
             <summary>
            Stores the parser delay in ms which is used for parsing strings to objects.
             </summary>
        </member>
        <member name="M:ScriptSDK.Configuration.ContextOptions.Initialize">
            <summary>
            Function initializes ContextMenuOptions  with default values.
            Obsolete when SDK.Initialize(); was used before.
            </summary>
        </member>
        <member name="T:ScriptSDK.Configuration.ObjectOptions">
            <summary>
            ObjectOptions is a configuration class for UOEntities.
            </summary>
        </member>
        <member name="P:ScriptSDK.Configuration.ObjectOptions.DropDelay">
             <summary>
            Stores delay (ms) used by Stealth for drag and drop actions.
             </summary>
        </member>
        <member name="P:ScriptSDK.Configuration.ObjectOptions.ToolTipDelay">
             <summary>
            Stores delay (ms) for tooltip parser which is used by Stealth client.
             </summary>
        </member>
        <member name="M:ScriptSDK.Configuration.ObjectOptions.SetCatchBag(ScriptSDK.Items.Container)">
            <summary>
            Function assignes the cached "Catchbag".
            </summary>
        </member>
        <member name="M:ScriptSDK.Configuration.ObjectOptions.SetCatchBag(ScriptSDK.Serial)">
            <summary>
            Function assignes the cached "Catchbag".
            </summary>
        </member>
        <member name="M:ScriptSDK.Configuration.ObjectOptions.SetCatchBag(System.UInt32)">
            <summary>
            Function assignes the cached "Catchbag".
            </summary>
        </member>
        <member name="M:ScriptSDK.Configuration.ObjectOptions.ReleaseCatchBag">
            <summary>
            Function releases the cached "Catchbag".
            </summary>
        </member>
        <member name="T:ScriptSDK.Configuration.ShopOptions">
            <summary>
            ShopOptions is a configuration class for vendoring system.
            </summary>		
        </member>
        <member name="P:ScriptSDK.Configuration.ShopOptions.AutoBuyDelay">
             <summary>
            Stores delay for auto buy on vendoring system.
             </summary>
        </member>
        <member name="P:ScriptSDK.Configuration.ShopOptions.AutoSellDelay">
             <summary>
            Stores delay for auto sell on vendoring system.
             </summary>
        </member>
        <member name="T:ScriptSDK.Data.QueryTypeAttribute">
            <summary>
            Custom attributes are able to store static data onto a class or interface without the requirement to instance the class.
            The SDK use this kind of attribute to store references as topdown principle. The root class stores the types of childclasses
            and the childclasses of their childclasses (full recursive). The lowest level of class attribute should be QueryTypeAttribute.
            Certain scanner functions are able to build search queries through this structure and generate a huge customized and filtered query 
            just by passing 1 single type.
            </summary>
            <example>
            <code language="CSharp">
            <![CDATA[
            [QueryType(typeof (BaseNecklace), typeof (BaseRing), typeof (BaseEarring), typeof (BaseBracelet))]
            public class BaseJewel : Item, IJewel
            {
                public BaseJewel(uint ObjectID) : base(ObjectID)
                { }
            
                public BaseJewel(Serial serial): base(serial)
                { }
            } 
            ]]>
            </code>
            </example>
        </member>
        <member name="M:ScriptSDK.Data.QueryTypeAttribute.#ctor">
            <summary>
            Constructor varuant to store types.
            </summary>
        </member>
        <member name="M:ScriptSDK.Data.QueryTypeAttribute.#ctor(System.Collections.Generic.List{System.Type})">
            <summary>
            Constructor varuant to store types.
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:ScriptSDK.Data.QueryTypeAttribute.#ctor(System.Type[])">
            <summary>
            Constructor varuant to store types.
            </summary>
            <param name="list"></param>
        </member>
        <member name="P:ScriptSDK.Data.QueryTypeAttribute.Types">
            <summary>
            Storage for implemented Types
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.QuerySearchAttribute">
            <summary>
            The QuerySearchAttribute describes a lowlevel attribute which allows to set filter attributes to a class inherited from UOEntity.
            The Scanner methods later on can build a query by this.
            Can be added in Combination of QueryTypeAttribute.
            </summary>
            <example>
            <code language="CSharp">
            <![CDATA[
            [QuerySearch(new ushort[] { 0x0EE9, 0x0E21 })]
            public class Bandage : Item
            {
                public Bandage(Serial serial) : base(serial)
                { }
            }
            ]]>
            </code>
            </example>
        </member>
        <member name="M:ScriptSDK.Data.QuerySearchAttribute.#ctor(System.UInt16[],System.UInt16[],System.UInt32[])">
            <summary>
            Constructor with optional parameters.
            </summary>
            <param name="graphics"></param>
            <param name="colors"></param>
            <param name="labels"></param>
        </member>
        <member name="M:ScriptSDK.Data.QuerySearchAttribute.#ctor(System.UInt16,System.UInt16[],System.UInt32[])">
            <summary>
            Constructor with optional parameters.
            </summary>
            <param name="graphic"></param>
            <param name="colors"></param>
            <param name="labels"></param>
        </member>
        <member name="M:ScriptSDK.Data.QuerySearchAttribute.#ctor(System.UInt16[],System.UInt16,System.UInt32[])">
            <summary>
            Constructor with optional parameters.
            </summary>
            <param name="graphics"></param>
            <param name="color"></param>
            <param name="labels"></param>
        </member>
        <member name="M:ScriptSDK.Data.QuerySearchAttribute.#ctor(System.UInt16[],System.UInt16[],System.UInt32)">
            <summary>
            Constructor with optional parameters.
            </summary>
            <param name="graphics"></param>
            <param name="colors"></param>
            <param name="label"></param>
        </member>
        <member name="M:ScriptSDK.Data.QuerySearchAttribute.#ctor(System.UInt16,System.UInt16[],System.UInt32)">
            <summary>
            Constructor with optional parameters.
            </summary>
            <param name="graphic"></param>
            <param name="colors"></param>
            <param name="label"></param>
        </member>
        <member name="M:ScriptSDK.Data.QuerySearchAttribute.#ctor(System.UInt16[],System.UInt16,System.UInt32)">
            <summary>
            Constructor with optional parameters.
            </summary>
            <param name="graphics"></param>
            <param name="color"></param>
            <param name="label"></param>
        </member>
        <member name="M:ScriptSDK.Data.QuerySearchAttribute.#ctor(System.UInt16,System.UInt16,System.UInt32)">
            <summary>
            Constructor with optional parameters.
            </summary>
            <param name="graphic"></param>
            <param name="color"></param>
            <param name="label"></param>
        </member>
        <member name="M:ScriptSDK.Data.QuerySearchAttribute.#ctor(System.UInt16,System.Collections.Generic.List{System.UInt16},System.Collections.Generic.List{System.UInt32})">
            <summary>
            Constructor with optional parameters.
            </summary>
            <param name="graphic"></param>
            <param name="colors"></param>
            <param name="labels"></param>
        </member>
        <member name="M:ScriptSDK.Data.QuerySearchAttribute.#ctor(System.Collections.Generic.List{System.UInt16},System.UInt16,System.Collections.Generic.List{System.UInt32})">
            <summary>
            Constructor with optional parameters.
            </summary>
            <param name="graphics"></param>
            <param name="color"></param>
            <param name="labels"></param>
        </member>
        <member name="M:ScriptSDK.Data.QuerySearchAttribute.#ctor(System.Collections.Generic.List{System.UInt16},System.Collections.Generic.List{System.UInt16},System.UInt32)">
            <summary>
            Constructor with optional parameters.
            </summary>
            <param name="graphics"></param>
            <param name="colors"></param>
            <param name="label"></param>
        </member>
        <member name="M:ScriptSDK.Data.QuerySearchAttribute.#ctor(System.UInt16,System.Collections.Generic.List{System.UInt16},System.UInt32)">
            <summary>
            Constructor with optional parameters.
            </summary>
            <param name="graphic"></param>
            <param name="colors"></param>
            <param name="label"></param>
        </member>
        <member name="M:ScriptSDK.Data.QuerySearchAttribute.#ctor(System.Collections.Generic.List{System.UInt16},System.UInt16,System.UInt32)">
            <summary>
            Constructor with optional parameters.
            </summary>
            <param name="graphics"></param>
            <param name="color"></param>
            <param name="label"></param>
        </member>
        <member name="M:ScriptSDK.Data.QuerySearchAttribute.#ctor(System.Collections.Generic.List{System.UInt16},System.Collections.Generic.List{System.UInt16},System.Collections.Generic.List{System.UInt32})">
            <summary>
            Default Constructor.
            </summary>
            <param name="graphics"></param>
            <param name="colors"></param>
            <param name="labels"></param>
        </member>
        <member name="P:ScriptSDK.Data.QuerySearchAttribute.Graphics">
            <summary>
            Stores a list of graphic types for search queries.
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.QuerySearchAttribute.Colors">
            <summary>
            Stores a list of colors for search queries.
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.QuerySearchAttribute.Labels">
            <summary>
            Stores a list of localized ID´s fpr search queries.
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.TargetState">
            <summary>
                Describes the state of a target class
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.JournalType">
            <summary>
            Enumeration is used for multiple actions in range of journal, such as sending, parsing and reading messages.
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.TargetType">
            <summary>
            Enumeration describes the different beings of target cursors used by Targethelper and virtual targets.
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.TargetActionType">
            <summary>
            Enumeration describes the kind of target action on Targethelper.
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.GumpReplyType">
            <summary>
            Enumeration describes the kind of reply on gumpevents.
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.CMEFlags">
            <summary>
            Context menu flags for context entries.
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.SkillLock">
            <summary>
            Enumeration describes the lockstate of skills and stats.
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.Stats">
            <summary>
            Enumeration describes stats.
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.Notoriety">
            <summary>
            Enumeration describes the notoriety of a mobile.
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.HarvestType">
            <summary>
            Enumeration describes direction for targethelper.
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.TOKEN_ELEVATION_TYPE">
            <summary>
            Enumeration used inlined by UAC-Helper.
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.TOKEN_INFORMATION_CLASS">
            <summary>
            Enumeration used inlined by UAC-Helper.
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.SkillName">
            <summary>
            Enumeration describes skills as skillname. Returns 999 if unknown skill.
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.BuffIconSrv">
            <summary>
            Enumeration describes the Buff exposed via ID from server.
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.Map">
            <summary>
            Describes the location of player. Returns 0x7F - Internal when unknown.
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.Direction">
            <summary>
            Enumeration describes the movement and view direction of an entity.
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.Layer">
            <summary>
            Describes different layer on mobile paperdoll.
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.Race">
            <summary>
            Describes the race of a mobile.
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.Gender">
            <summary>
            Enumeration to store and expose genders.
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.RequestType">
            <summary>
            Enumeration describes types of requests on paperdoll.
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.LootType">
            <summary>
            Describes the property of an Item wich can be blessed, secured, or cursed.
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.SecureLevel">
            <summary>
            Describes the standart Securelevel readable by native client.
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.Events">
            <summary>
            Events class expose event handlers for customize event handling.<br/>
            Be aware that those events can be delegated by Stealth client or native written in .NET.
            </summary>
        </member>
        <member name="E:ScriptSDK.Data.Events.OnGumpReply">
            <summary>
            Event handler describes the interaction wich will be fired, whenever a gump control has been successful<br/>
            triggered. The event arguments expose different informations about the handler which allow to design additional customizing.<br/>
            Event is written native in .NET and doesnt call delegates by stealth as base.
            </summary>
        </member>
        <member name="M:ScriptSDK.Data.Events.Reset">
            <summary>
            Function resets all assigned event handlers.
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.SkillEventArgs">
            <summary>
            Event arguments for skill handler events.
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.SkillEventArgs.Skill">
            <summary>
            Stores the used skill, regardless of result.
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.SkillEventArgs.State">
            <summary>
            Stores the result of handler.
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.VirtuesEventArgs">
            <summary>
            Event arguments for virtues handler events
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.VirtuesEventArgs.Virtue">
            <summary>
            Stores the used virtue, regardless of result.
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.VirtuesEventArgs.State">
            <summary>
            Stores the result of handler
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.ScriptLoggerArgs">
            <summary>
            Event arguments for script logger events
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.ScriptLoggerArgs.Text">
            <summary>
            Stores Text passed by Scriptlogger
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.ScriptLoggerArgs.full">
            <summary>
            Returns state if it used Write or WriteLine.
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.TargetReplyEventArgs">
            <summary>
            Event arguments for targethelper events.
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.TargetReplyEventArgs.ReplyType">
            <summary>
            Stores the target type.
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.TargetReplyEventArgs.ActionType">
            <summary>
            Stores the handler type.
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.TargetReplyEventArgs.State">
            <summary>
            Stores the result of handler.
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.ContextMenuEventArgs">
            <summary>
            Event arguments for context menu events
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.ContextMenuEventArgs.Entry">
            <summary>
            Stores reference of last called context menu entry.
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.ContextMenuEventArgs.State">
            <summary>
            Stores the result of handler.
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.ContextMenuEventArgs.EntryIndex">
            <summary>
            Stores the entry index of selected context menu entry
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.GumpReplyEventArgs">
            <summary>
            Event arguments for gump events
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.GumpReplyEventArgs.Control">
            <summary>
            Stores reference of controll which caused the <b>OnGumpReply</b> event.
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.GumpReplyEventArgs.State">
            <summary>
            Stores the result of handler.
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.ControlExtensions">
            <summary>
            Control extension offering support for graphica interfaces with backgroundworker as script thread.
            </summary>
        </member>
        <member name="M:ScriptSDK.Data.ControlExtensions.SuperInvoke(System.ComponentModel.ISynchronizeInvoke,System.Windows.Forms.MethodInvoker)">
            <summary>
            Checks if control requires invokation of method or not. Then performs method.
            Be aware, there are more and better ways to handle data threadsafe, but this is an easy and 99% working way.
            </summary>
            <param name="control"></param>
            <param name="action"></param>
            <example>
            Example how to assign data to control, and let extension handle the thread safety.
            <code language="CSharp">
            <![CDATA[
                textbox.SuperInvoke(()=> Text = "Hello World");
            ]]>
            </code>
            </example>
        </member>
        <member name="M:ScriptSDK.Data.ControlExtensions.SuperInvoke``1(System.Windows.Forms.Control,System.Func{``0})">
            <summary>
            Checks if control requires invokation of function or not. Then performs function.
            Be aware, there are more and better ways to handle data threadsafe, but this is an easy and 99% working way.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="control"></param>
            <param name="func"></param>
            <returns></returns>
            <example>
            Example how to read data from control, and let extension handle the thread safety.
            <code language="CSharp">
            <![CDATA[
              string text = textbox.SuperInvoke(()=> Text);
            ]]>
            </code>
            </example>
        </member>
        <member name="T:ScriptSDK.Data.IPoint2D">
            <summary>
            Interface storing 2 dimensional point.
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.IPoint2D.X">
            <summary>
            Stores x-axis.
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.IPoint2D.Y">
            <summary>
            Stores y-axis. 
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.IPoint3D">
            <summary>
            Interface storing 3 dimensional point.
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.IPoint3D.Z">
            <summary>
            Stores z-axis.
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.IGumpElement">
            <summary>
            Interface describes the root level shared data of gump controls and components.<br/>
            <b>Should never used by SDK-User, since its a designer interface for mapping data internal!</b>
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.IGumpElement.ElementID">
            <summary>
            Stores ElementID which expose the unique queue number of element.
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.IGumpElement.Page">
            <summary>
            Stores PageID which expose on which layer of gump the element is assigned.
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.IGumpControl">
            <summary>
            Interface describes the common shared data of any gump control.
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.IGumpControl.Location">
            <summary>
            Stores coords which expose location of element.
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.IGumpComponent">
            <summary>
            Interface describes the common shared data of any gump component.
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.Graphic">
            <summary>
            Object expose graphic index ID of gump control in pressed or released state.
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.Graphic.Pressed">
            <summary>
            Stores pressed control graphic index ID.
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.Graphic.Released">
            <summary>
            Stores released control graphic index ID.
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.Size">
            <summary>
            Object expose values to determine size of control.
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.Size.Width">
            <summary>
            Stores width of control.
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.Size.Heigth">
            <summary>
            Stores heigth of control.
            </summary>
        </member>
        <member name="T:ScriptSDK.Data.Range">
            <summary>
            Object expose values to determine range between two values.
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.Range.Min">
            <summary>
            Stores Min Value of control.
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.Range.Max">
            <summary>
            Stores Max Value of control.
            </summary>
        </member>
        <member name="M:ScriptSDK.Data.Range.#ctor(System.Int32,System.Int32)">
            <summary>
            Default Constructor
            </summary>
            <param name="min"></param>
            <param name="max"></param>
        </member>
        <member name="T:ScriptSDK.Data.Point2D">
            <summary>
            Structure expose the model of a 2 dimensional location.
            </summary>
        </member>
        <member name="F:ScriptSDK.Data.Point2D.Zero">
            <summary>
            Describes a dummy Point2D
            </summary>
        </member>
        <member name="M:ScriptSDK.Data.Point2D.#ctor(System.Int32,System.Int32)">
            <summary>
            Default Constructor for instancing Point2D
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:ScriptSDK.Data.Point2D.#ctor(ScriptSDK.Data.IPoint2D)">
            <summary>
            Constructor for objects interfaced by IPoint2D
            </summary>
            <param name="p"></param>
        </member>
        <member name="P:ScriptSDK.Data.Point2D.X">
            <summary>
            Returns x-axis.
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.Point2D.Y">
            <summary>
            Returns y-axis
            </summary>
        </member>
        <member name="M:ScriptSDK.Data.Point2D.ToString">
            <summary>
            Converts Point2D into proper string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Data.Point2D.Parse(System.String)">
            <summary>
            Function tries to parse a string like "123,456" to Point2D.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Data.Point2D.Equals(System.Object)">
            <summary>
            Allows to compare this with passed point2D. Returns false if not possible.
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Data.Point2D.GetHashCode">
            <summary>
            Returns Hashcode of object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Data.Point2D.op_Equality(ScriptSDK.Data.Point2D,ScriptSDK.Data.Point2D)">
            <summary>
            Function is for comperation 2 Point2D onto equality
            </summary>
            <param name="l"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Data.Point2D.op_Inequality(ScriptSDK.Data.Point2D,ScriptSDK.Data.Point2D)">
            <summary>
            Function is for comperation 2 Point2D onto unequality
            </summary>
            <param name="l"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Data.Point2D.op_Equality(ScriptSDK.Data.Point2D,ScriptSDK.Data.IPoint2D)">
            <summary>
            Function is for comperation 1 Point2D and 1 object interfaced by IPoint2D onto equality
            </summary>
            <param name="l"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Data.Point2D.op_Inequality(ScriptSDK.Data.Point2D,ScriptSDK.Data.IPoint2D)">
            <summary>
            Function is for comperation 1 Point2D and 1 object interfaced by IPoint2D onto unequality
            </summary>
            <param name="l"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Data.Point2D.op_GreaterThan(ScriptSDK.Data.Point2D,ScriptSDK.Data.Point2D)">
            <summary>
            Function is for comperation 2 Point2D if left Point2D is greater then right point.
            </summary>
            <param name="l"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Data.Point2D.op_GreaterThan(ScriptSDK.Data.Point2D,ScriptSDK.Data.Point3D)">
            <summary>
            Function is for comperation 2 Point2D if left Point2D is greater then right point.
            </summary>
            <param name="l"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Data.Point2D.op_GreaterThan(ScriptSDK.Data.Point2D,ScriptSDK.Data.IPoint2D)">
            <summary>
            Function is for comperation 2 Point2D if left Point2D is greater then right object interfaced by IPoint2D.
            </summary>
            <param name="l"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Data.Point2D.op_LessThan(ScriptSDK.Data.Point2D,ScriptSDK.Data.Point2D)">
            <summary>
            Function is for comperation 2 Point2D if left Point2D is smaller then right point.
            </summary>
            <param name="l"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Data.Point2D.op_LessThan(ScriptSDK.Data.Point2D,ScriptSDK.Data.Point3D)">
            <summary>
            Function is for comperation 2 Point2D if left Point2D is smaller then right point.
            </summary>
            <param name="l"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Data.Point2D.op_LessThan(ScriptSDK.Data.Point2D,ScriptSDK.Data.IPoint2D)">
            <summary>
            Function is for comperation 2 Point2D if left Point2D is smaller then right object interfaced by IPoint2D.
            </summary>
            <param name="l"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Data.Point2D.op_GreaterThanOrEqual(ScriptSDK.Data.Point2D,ScriptSDK.Data.Point2D)">
            <summary>
            Function is for comperation 2 Point2D if left Point2D is greater or equal then right point.
            </summary>
            <param name="l"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Data.Point2D.op_GreaterThanOrEqual(ScriptSDK.Data.Point2D,ScriptSDK.Data.Point3D)">
            <summary>
            Function is for comperation 2 Point2D if left Point2D is greater or equal then right point.
            </summary>
            <param name="l"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Data.Point2D.op_GreaterThanOrEqual(ScriptSDK.Data.Point2D,ScriptSDK.Data.IPoint2D)">
            <summary>
            Function is for comperation 2 Point2D if left Point2D is greater or equal then right object interfaced by IPoint2D.
            </summary>
            <param name="l"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Data.Point2D.op_LessThanOrEqual(ScriptSDK.Data.Point2D,ScriptSDK.Data.Point2D)">
            <summary>
            Function is for comperation 2 Point2D if left Point2D is smaller or equal then right point.
            </summary>
            <param name="l"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Data.Point2D.op_LessThanOrEqual(ScriptSDK.Data.Point2D,ScriptSDK.Data.Point3D)">
            <summary>
            Function is for comperation 2 Point2D if left Point2D is smaller or equal then right point.
            </summary>
            <param name="l"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Data.Point2D.op_LessThanOrEqual(ScriptSDK.Data.Point2D,ScriptSDK.Data.IPoint2D)">
            <summary>
            Function is for comperation 2 Point2D if left Point2D is smaller or equal then right object interfaced by IPoint2D.
            </summary>
            <param name="l"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="T:ScriptSDK.Data.Point3D">
            <summary>
            Structure expose the model of a 3 dimensional location.
            </summary>
        </member>
        <member name="F:ScriptSDK.Data.Point3D.Zero">
            <summary>
            Describes a dummy Point3D.
            </summary>
        </member>
        <member name="M:ScriptSDK.Data.Point3D.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Default Constructor.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
        </member>
        <member name="M:ScriptSDK.Data.Point3D.#ctor(ScriptSDK.Data.IPoint3D)">
            <summary>
            Alternative constructor allows to use an IPoint3D interfaced object as base.
            </summary>
            <param name="p"></param>
        </member>
        <member name="M:ScriptSDK.Data.Point3D.#ctor(ScriptSDK.Data.IPoint2D,System.Int32)">
            <summary>
            Alternative constructor allows to use an IPoint2D interfaced object as base + z-axis.
            </summary>
            <param name="p"></param>
            <param name="z"></param>
        </member>
        <member name="P:ScriptSDK.Data.Point3D.X">
            <summary>
            Returns X.
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.Point3D.Y">
            <summary>
            Returns Y.
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.Point3D.Z">
            <summary>
            Returns Z.
            </summary>
        </member>
        <member name="M:ScriptSDK.Data.Point3D.ToString">
            <summary>
            Returns object proper parsed to string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Data.Point3D.Equals(System.Object)">
            <summary>
            Allows to compare object with other Point3D.
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Data.Point3D.GetHashCode">
            <summary>
            Returns Hashcode of object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Data.Point3D.Parse(System.String)">
            <summary>
            Try to parse a string and generate a Point3D. Sample Parse("123,456,-7").
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Data.Point3D.op_Equality(ScriptSDK.Data.Point3D,ScriptSDK.Data.Point3D)">
            <summary>
            Operand to compare if both values are equal.
            </summary>
            <param name="l"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Data.Point3D.op_Inequality(ScriptSDK.Data.Point3D,ScriptSDK.Data.Point3D)">
            <summary>
            Operand to compare if both values are unequal.
            </summary>
            <param name="l"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Data.Point3D.op_Equality(ScriptSDK.Data.Point3D,ScriptSDK.Data.IPoint3D)">
            <summary>
            Operand to compare if both values are equal.
            </summary>
            <param name="l"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Data.Point3D.op_Inequality(ScriptSDK.Data.Point3D,ScriptSDK.Data.IPoint3D)">
            <summary>
            Operand to compare if both values are unequal.
            </summary>
            <param name="l"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="T:ScriptSDK.Data.Rectangle2D">
            <summary> 
            Structure expose the model of a 2 dimensional area with start and endpoint.
            </summary>
        </member>
        <member name="M:ScriptSDK.Data.Rectangle2D.#ctor(ScriptSDK.Data.IPoint2D,ScriptSDK.Data.IPoint2D)">
            <summary>
            Default Constructor
            </summary>
            <param name="start"></param>
            <param name="end"></param>
        </member>
        <member name="M:ScriptSDK.Data.Rectangle2D.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Alternate Constructor.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="P:ScriptSDK.Data.Rectangle2D.Start">
            <summary>
            Stores the startpoint.
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.Rectangle2D.End">
            <summary>
            Stores the endpoint.
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.Rectangle2D.X">
            <summary>
            Stores X of startpoint.
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.Rectangle2D.Y">
            <summary>
            Stores Y of startpoint
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.Rectangle2D.Width">
            <summary>
            Stores witdth of area.
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.Rectangle2D.Height">
            <summary>
            Stores Heigth of area.
            </summary>
        </member>
        <member name="M:ScriptSDK.Data.Rectangle2D.Set(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Allows to renew the setting of area.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:ScriptSDK.Data.Rectangle2D.Parse(System.String)">
            <summary>
            Function tries to parse string on format if stored as format "x1,y1,x2,y2".
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Data.Rectangle2D.MakeHold(ScriptSDK.Data.Rectangle2D)">
            <summary>
            Method allows to resize the area.
            </summary>
            <param name="r"></param>
        </member>
        <member name="M:ScriptSDK.Data.Rectangle2D.Contains(ScriptSDK.Data.Point3D)">
            <summary>
            Function returns if point is within area.
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Data.Rectangle2D.Contains(ScriptSDK.Data.Point2D)">
            <summary>
            Function returns if point is within Area
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Data.Rectangle2D.Contains(ScriptSDK.Data.IPoint2D)">
            <summary>
            Function returns if point is within area.
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Data.Rectangle2D.ToString">
            <summary>
            Converts object to proper parsed string.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ScriptSDK.Data.Rectangle3D">
            <summary>
            Structure expose the model of a 3 dimensional area with start and endpoint.
            </summary>
        </member>
        <member name="M:ScriptSDK.Data.Rectangle3D.#ctor(ScriptSDK.Data.Point3D,ScriptSDK.Data.Point3D)">
            <summary>
            Default Constructor.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
        </member>
        <member name="M:ScriptSDK.Data.Rectangle3D.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Alternative Constructor.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="depth"></param>
        </member>
        <member name="P:ScriptSDK.Data.Rectangle3D.Start">
            <summary>
            Stores the startpoint.
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.Rectangle3D.End">
            <summary>
            Stores the endpoint.
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.Rectangle3D.Width">
            <summary>
            Stores the width.
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.Rectangle3D.Height">
            <summary>
            Stores the height.
            </summary>
        </member>
        <member name="P:ScriptSDK.Data.Rectangle3D.Depth">
            <summary>
            Stores the depth.
            </summary>
        </member>
        <member name="M:ScriptSDK.Data.Rectangle3D.Contains(ScriptSDK.Data.Point3D)">
            <summary>
            Functions checks if a certain point is within that area.
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Data.Rectangle3D.Contains(ScriptSDK.Data.IPoint3D)">
            <summary>
            Functions checks if a certain point is within that area.
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="T:ScriptSDK.Gumps.GumpExtensions">
            <summary>
            Extends Gump instanced objects by further functions.
            </summary>
        </member>
        <member name="M:ScriptSDK.Gumps.GumpExtensions.WaitForGumpClose(ScriptSDK.Gumps.Gump,System.Double)">
            <summary> 
            Function describes a process where the user waits for a close action for certain gump type dynamicly but <br/>
            for a given timespan. Returns true if this event occured or false if not.
            </summary>
            <param name="gump"></param>
            <param name="MaxDelay"></param>
            <returns></returns>
        </member>
        <member name="T:ScriptSDK.Gumps.GumpAlphaRegion">
            <summary>
            GumpAlphaRegion component exposes a Panel, the player can read.<br/>
            This component is a pseudo equivalent to a windows form component but with uo suitable properties only.<br/>
            There are no constructors or generators exposed due the design, that the gump should parse that control.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpAlphaRegion.Size">
            <summary>
            Stores size of control.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpAlphaRegion.Page">
            <summary>
            Describes, on which page the component is layered.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpAlphaRegion.Location">
            <summary>
            Stores coords which expose location of element.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpAlphaRegion.ElementID">
            <summary>
            Describes the ElementID wich equals the Queue-Nr. from gump packet in wich order the gump has been generated.
            </summary>
        </member>
        <member name="T:ScriptSDK.Gumps.GumpBackGround">
            <summary>
            GumpBackGround component exposes a Panel, the player can read.<br/>
            This component is a pseudo equivalent to a windows form component but with uo suitable properties only.<br/>
            There are no constructors or generators exposed due the design, that the gump should parse that control.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpBackGround.Location">
            <summary>
            Stores coords which expose location of element.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpBackGround.Size">
            <summary>
            Stores size of control.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpBackGround.GumpID">
            <summary>
            Stores the logical gump graphic wich the parser behind used to build the background on client side.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpBackGround.Page">
            <summary>
            Stores page layer of component.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpBackGround.ElementID">
            <summary>
            Stores unique elementID.
            </summary>
        </member>
        <member name="T:ScriptSDK.Gumps.GumpGroup">
            <summary>
            GumpAlphaRegion component exposes a Panel, the player can read.<br/>
            This component is a pseudo equivalent to a windows form component but with uo suitable properties only.<br/>
            There are no constructors or generators exposed due the design, that the gump should parse that control.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpGroup.ID">
            <summary>
            Stores group ID.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpGroup.Page">
            <summary>
            Describes, on which page the component is layered.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpGroup.ElementID">
            <summary>
            Stores the unique elementID of component.
            </summary>
        </member>
        <member name="T:ScriptSDK.Gumps.GumpHtml">
            <summary>
            GumpHtml component exposes a Panel, the player can read.<br/>
            This component is a pseudo equivalent to a windows form component but with uo suitable properties only.<br/>
            There are no constructors or generators exposed due the design, that the gump should parse that control.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpHtml.Location">
            <summary>
            Stores coords which expose location of element.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpHtml.Size">
            <summary>
            Stores size of control.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpHtml.Background">
            <summary>
            Stores if background is visible.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpHtml.Scrolling">
            <summary>
            Stores if scrollbars are visible.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpHtml.Page">
            <summary>
            Describes, on which page the component is layered.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpHtml.ElementID">
            <summary>
            Stores the unique elementID of component.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpHtml.Text">
            <summary>
            Stores the Parsed Text.
            </summary>
        </member>
        <member name="T:ScriptSDK.Gumps.GumpHtmlLocalized">
            <summary>
            GumpAlphaRegion component exposes a Panel, the player can read.<br/>
            This component is a pseudo equivalent to a windows form component but with uo suitable properties only.<br/>
            There are no constructors or generators exposed due the design, that the gump should parse that control.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpHtmlLocalized.Location">
            <summary>
            Stores coords which expose location of element.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpHtmlLocalized.Size">
            <summary>
            Stores size of control.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpHtmlLocalized.ClilocID">
            <summary>
            Stores localizeable cliloc data table ID.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpHtmlLocalized.Background">
            <summary>
            Stores if background is visible.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpHtmlLocalized.Scrolling">
            <summary>
            Stores if scroll bars are visible.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpHtmlLocalized.Page">
            <summary>
            Describes, on which page the component is layered.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpHtmlLocalized.ElementID">
            <summary>
            Stores the unique elementID of component.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpHtmlLocalized.Color">
            <summary>
            Stores text color.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpHtmlLocalized.Args">
            <summary>
            Stores arguments.
            </summary>
        </member>
        <member name="T:ScriptSDK.Gumps.GumpImage">
            <summary>
            GumpImage component exposes a PictureBox, the player can read.<br/>
            This component is a pseudo equivalent to a windows form component but with uo suitable properties only.<br/>
            There are no constructors or generators exposed due the design, that the gump should parse that control.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpImage.Location">
            <summary>
            Stores coords which expose location of element.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpImage.GraphicID">
            <summary>
            Stores graphic index ID of gump graphic.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpImage.Color">
            <summary>
            Stores the color of component (0 = no color!).
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpImage.Page">
            <summary>
            Stores how many pages this gump.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpImage.ElementID">
            <summary>
            Stores the unique elementID of component.
            </summary>
        </member>
        <member name="T:ScriptSDK.Gumps.GumpItem">
            <summary>
            GumpItem component exposes a PictureBox, the player can read.<br/>
            This component is a pseudo equivalent to a windows form component but with uo suitable properties only.<br/>
            There are no constructors or generators exposed due the design, that the gump should parse that control.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpItem.Location">
            <summary>
            Stores coords which expose location of element.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpItem.GraphicID">
            <summary>
            Stores the graphic ID of object from art.uop\mul datatable.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpItem.Color">
            <summary>
            Stores text color.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpItem.Page">
            <summary>
            Describes, on which page the component is layered.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpItem.ElementID">
            <summary>
            Stores the unique elementID of component.
            </summary>
        </member>
        <member name="T:ScriptSDK.Gumps.GumpItemProperty">
            <summary>
            GumpItemProperty component exposes a Tooltip, the player can read.<br/>
            This component is a pseudo equivalent to a windows form component but with uo suitable properties only.<br/>
            There are no constructors or generators exposed due the design, that the gump should parse that control.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpItemProperty.ClilocID">
            <summary>
            Stores the ClilocID of localized text.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpItemProperty.ElementID">
            <summary>
            Stores the unique elementID of component.
            </summary>
        </member>
        <member name="T:ScriptSDK.Gumps.GumpLabel">
            <summary>
            GumpLabel component exposes a Panel, the player can read.<br/>
            This component is a pseudo equivalent to a windows form component but with uo suitable properties only.<br/>
            There are no constructors or generators exposed due the design, that the gump should parse that control.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpLabel.Location">
            <summary>
            Stores coords which expose location of element.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpLabel.Size">
            <summary>
            Stores size of control.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpLabel.Color">
            <summary>
            Stores text color.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpLabel.Page">
            <summary>
            Describes, on which page the component is layered.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpLabel.ElementID">
            <summary>
            Stores the unique elementID of component.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpLabel.Text">
            <summary>
            Stores the Parsed Text.
            </summary>
        </member>
        <member name="T:ScriptSDK.Gumps.GumpTooltip">
            <summary>
            GumpTooltip component exposes a Tooltip, the player can read.<br/>
            This component is a pseudo equivalent to a windows form component but with uo suitable properties only.<br/>
            There are no constructors or generators exposed due the design, that the gump should parse that control.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpTooltip.ClilocID">
            <summary>
            Stored ClilocID of ToolTip.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpTooltip.Page">
            <summary>
            Stored Page.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpTooltip.ElementID">
            <summary>
            Stored ElementID.
            </summary>
        </member>
        <member name="T:ScriptSDK.Gumps.GumpButton">
            <summary>
            GumpButton control exposes a button which the player can click when he wants to perform a certain action.<br/>
            This control is a pseudo equivalent to a windows form control but only contains UO suitable properties.<br/>
            There are no constructors or generators exposed due the to design of the SDK.<br/>
            Use Gump.GetGump(GumpType).Buttons to retrieve a list of GumpButton instances from the specified gump.
            </summary>
        </member>
        <member name="M:ScriptSDK.Gumps.GumpButton.Click">
            <summary>
            Click function performs an update onto gump and expose further actions which are controlled by server.<br/>
            Function validates if the button is still valid (serial of generator is still intact) and then performs a dynamic<br/>
            click action regardless of layered index.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpButton.Page">
            <summary>
            Stores how many pages this gump.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpButton.Location">
            <summary>
            Stores coords which expose location of element.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpButton.ArtLocation">
            <summary>
            Stores location of art, if control inherits from tiled button control, else returns (-1,-1).
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpButton.ArtID">
            <summary>
            Stores ID of art, if control inherits from tiled button control, else returns -1.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpButton.ElementID">
            <summary>
            Stores ElementID which expose the unique queue number of element.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpButton.PacketValue">
            <summary>
            Stores packet value of control, which is only exposed for debug research. The control will handle actions standalone.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpButton.Color">
            <summary>
            Stores color of art, if control inherits from tiled button control, else returns -1.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpButton.QuitID">
            <summary>
            Purpose is unknown. TODO : Find out.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpButton.Graphic">
            <summary>
            Stores the Graphic ID of pressed and released control.
            </summary>
        </member>
        <member name="T:ScriptSDK.Gumps.GumpCheckBox">
            <summary>
            GumpCheckBox control exposes a checkbox, the player can push when he want perform certain actions<br/>
            This control is a pseudo equivalent to a windows form control but with uo suitable properties only.<br/>
            There are no constructors or generators exposed due the design, that the gump should parse that control.
            </summary>
        </member>
        <member name="M:ScriptSDK.Gumps.GumpCheckBox.Click(System.Boolean)">
            <summary>
            Click function performs an update onto gump and expose further actions which are controlled by server.<br/>
            Function validates if the checkbox is still valid (serial of generator is still intact) and then performs a dynamic<br/>
            click action regardless of layered index.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpCheckBox.Checked">
            <summary>
            Stores if Checkbox is checked or not.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpCheckBox.Page">
            <summary>
            Stores how many pages this gump.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpCheckBox.Location">
            <summary>
            Stores coords which expose location of element.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpCheckBox.Graphic">
            <summary>
            Stores the Graphic ID of pressed and released control.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpCheckBox.PacketValue">
            <summary>
            Stores packet value of control, which is only exposed for debug research. The control will handle actions standalone.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpCheckBox.ElementID">
            <summary>
            Stores ElementID which expose the unique queue number of element.
            </summary>
        </member>
        <member name="T:ScriptSDK.Gumps.GumpRadioButton">
            <summary>
            GumpRadioButton control exposes a radiobutton, the player can push when he want perform certain actions<br/>
            This control is a pseudo equivalent to a windows form control but with uo suitable properties only.<br/>
            There are no constructors or generators exposed due the design, that the gump should parse that control.
            </summary>
        </member>
        <member name="M:ScriptSDK.Gumps.GumpRadioButton.Click(System.Boolean)">
            <summary>
            Click function performs an update onto gump and expose further actions which are controlled by server.<br/>
            Function validates if the radiobutton is still valid (serial of generator is still intact) and then performs a dynamic<br/>
            click action regardless of layered index.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpRadioButton.Graphic">
            <summary>
            Stores the Graphic ID of pressed and released control.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpRadioButton.Checked">
            <summary>
            Stores if radiobutton is checked or not.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpRadioButton.Page">
            <summary>
            Stores PageID which expose on which layer of gump the element is assigned.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpRadioButton.Location">
            <summary>
            Stores coords which expose location of element.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpRadioButton.PacketValue">
            <summary>
            Stores packet value of control, which is only exposed for debug research. The control will handle actions standalone.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpRadioButton.ElementID">
            <summary>
            Stores ElementID which expose the unique queue number of element.
            </summary>
        </member>
        <member name="T:ScriptSDK.Gumps.GumpTextEdit">
            <summary>
            GumpTextEdit control exposes a TextEdit, the player can read or modify.<br/>
            This control is a pseudo equivalent to a windows form control but with uo suitable properties only.<br/>
            There are no constructors or generators exposed due the design, that the gump should parse that control.
            Whenever the owner gump performs an action through radiobutton, button or checkbox (which cause an update of gump)<br/>
            the gump will update text controls internal before sending those actions.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpTextEdit.ElementID">
            <summary>
            Stores ElementID which expose the unique queue number of element.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpTextEdit.Page">
            <summary>
            Stores PageID which expose on which layer of gump the element is assigned.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpTextEdit.Location">
            <summary>
            Stores coords which expose location of element.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpTextEdit.Size">
            <summary>
            Stores size of control.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpTextEdit.Color">
            <summary>
            Stores text color of text.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpTextEdit.TextID">
            <summary>
            Stores TextID of control, which is only exposed for debug research. The control will handle actions standalone.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpTextEdit.ReturnValue">
            <summary>
            Stores ReturnValue of control, which is only exposed for debug research. The control will handle actions standalone.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpTextEdit.Text">
            <summary>
            Allows to read and write text content. Will be automated updated via gump.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.GumpTextEdit.Limit">
            <summary>
            Stores the character limit of text. Returns -1 if length is infinite.<br/>
            Be aware, that the gump has to cut down text if size greater limit.
            </summary>
        </member>
        <member name="T:ScriptSDK.Gumps.Gump">
            <summary>
            The class Gump is an convenient class for handling the complexity of native UO-client gumps. The user <b>must</b> understand that gumps are <br/>
            server dictated/controlled user interfaces which allow very less but powerful actions through interface actions.<br/>
            Components and controls of a gump <b>must never</b> be manually initiliased, they are generated by the object parser of this class.<br/>
            One more side note : Components are read only, controls have custom actions!
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.Gump.GumpType">
            <summary>
            Stores unique type generated by server compiler.
            Same gump classes will send same gump type, like crafting : Smith, tailor and more will send same gump type.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.Gump.Serial">
            <summary>
            Stores unique Serial of instanced gump.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.Gump.Location">
            <summary>
            Stores coords which expose location of element.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.Gump.Pages">
            <summary>
            Stores how many pages this gump 
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.Gump.Movable">
            <summary>
            Stores if the gump is moveable on the graphical client.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.Gump.Resizeable">
            <summary>
            Stores if the gump can be resized.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.Gump.Disposeable">
            <summary>
            Stores if the gump is disposeable.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.Gump.Closeable">
            <summary>
            Stores if the gump can be closed via right click(true) or requires packet value as button reply(false).
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.Gump.Groups">
            <summary>
            Stores all "Groupbox" components.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.Gump.BackGrounds">
            <summary>
            Stores all "Background" components.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.Gump.AlphaRegions">
            <summary>
            Stores all "Panel" components.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.Gump.Buttons">
            <summary>
            Stores all "Button" controls.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.Gump.Checkboxes">
            <summary>
            Stores all "Checkbox" controls.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.Gump.RadioButtons">
            <summary>
            Stores all "RadioButton" controls.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.Gump.HTMLTexts">
            <summary>
            Stores all "HTML-Memo" components.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.Gump.HTMLLocalizedTexts">
            <summary>
            Stores all "Localized HTML-Memo" components.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.Gump.TextEdits">
            <summary>
            Stores all "TextEdit" controls.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.Gump.Images">
            <summary>
            Stores all "Gump Picture" components.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.Gump.Labels">
            <summary>
            Stores all "Label" components.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.Gump.Items">
            <summary>
            Stores all "Item Picture" components.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.Gump.Tooltips">
            <summary>
            Stores all "Tooltip" components.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.Gump.ItemProperties">
            <summary>
            Stores all "Item Property" components.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.Gump.Index">
            <summary>
            Returns index of active object by serial or -1 when no longer valid.
            </summary>
        </member>
        <member name="M:ScriptSDK.Gumps.Gump.Close">
            <summary>
            Function tries to close gump but returns false.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Gumps.Gump.IgnoreSerial">
            <summary>
            Adds serial to ignore list for further gump actions.
            </summary>
        </member>
        <member name="M:ScriptSDK.Gumps.Gump.IgnoreType">
            <summary>
            Adds gump type to ignore list for further gump actions.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.Gump.Count">
            <summary>
            Returns amount of active gumps regardless of type or serial.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.Gump.Serials">
            <summary>
            Returns list of all active gump serials regardless of type.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.Gump.Types">
            <summary>
            Returns list of all active gump types regardless of serials.
            </summary>
        </member>
        <member name="P:ScriptSDK.Gumps.Gump.ActiveGumps">
            <summary>
            Returns list of active gumps regardless of types or serials.
            </summary>
        </member>
        <member name="M:ScriptSDK.Gumps.Gump.GetGump(System.UInt32)">
            <summary>
            Scans for active gump with given type and returns a proper object image of it. Or returns null if no result found.
            </summary>
            <param name="Type"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Gumps.Gump.GetGump(ScriptSDK.Serial)">
            <summary>
            Scans for active gump with given serial and returns a proper object image of it. Or returns null if no result found.
            </summary>
            <param name="serial"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Gumps.Gump.ClearIgnoreList">
            <summary>
            Clears ignorelist for gump types and serial.
            </summary>
        </member>
        <member name="M:ScriptSDK.Gumps.Gump.WaitForGump(System.UInt32,System.Double)">
            <summary>
            Function describes a process where the user waits for a certain gump type dynamicly but <br/>
            for a given timespan. Returns true if this event occured or false if not.
            </summary>
            <param name="Type"></param>
            <param name="MaxDelay"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Gumps.Gump.WaitForGump(System.UInt32,System.Double,ScriptSDK.Gumps.Gump@)">
            <summary>
            Function describes a process where the user waits for a certain gump type dynamicly but <br/>
            for a given timespan. Returns true if this event occured or false if not.<br/>
            Additional generates a gump object if possible or return null.
            </summary>
            <param name="Type"></param>
            <param name="MaxDelay"></param>
            <param name="gump"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Gumps.Gump.WaitForGumpClose(System.UInt32,System.Double)">
            <summary>
            Function allows to check if a certain gump closes within maxdelay.
            </summary>
            <param name="type"></param>
            <param name="maxdelay"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Gumps.Gump.WaitForGumpClose(ScriptSDK.Serial,System.Double)">
            <summary>
            Function allows to check if a certain gump closes within maxdelay.
            </summary>
            <param name="serial"></param>
            <param name="maxdelay"></param>
            <returns></returns>
        </member>
        <member name="T:ScriptSDK.Engines.ClilocHelper">
            <summary>
            Clilochelper class is support class for localized messages.
            </summary>
        </member>
        <member name="M:ScriptSDK.Engines.ClilocHelper.ReadClilocFile(System.String,System.String@)">
            <summary>
            Function allows to read out custom clilocfiles.
            </summary>
            <param name="path"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.ClilocHelper.LoadClilocFileToCache(System.String,System.String@)">
            <summary>
            Function allows to load custom clilocfile into cache and decrease the parsertime of localized properties hugely,
            when cliloc exist in datatable.
            </summary>
            <param name="path"></param>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.ClilocHelper.ClearClilocFileCache">
            <summary>
            Removes\Release current cached cliloc file.
            </summary>
        </member>
        <member name="M:ScriptSDK.Engines.ClilocHelper.GetText(System.UInt32)">
            <summary>
            Function allows to get localized text either through stealth api or if included in cached datatable.
            </summary>
            <param name="ClilocID"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.ClilocHelper.GetText(System.Collections.Generic.List{System.UInt32})">
            <summary>
            Function allows to get multiple localizedtexts. Function use GetText(Cliloc)
            </summary>
            <param name="ClilocList"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.ClilocHelper.GetIndex(System.Collections.Generic.List{StealthAPI.ClilocItemRec},System.UInt32)">
            <summary>
            Function returns -1 if index not found else the index of list.
            </summary>
            <param name="list"></param>
            <param name="ClilocID"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.ClilocHelper.Contains(System.Collections.Generic.List{StealthAPI.ClilocItemRec},System.UInt32)">
            <summary>
            function returns true if list contains cliloID.
            </summary>
            <param name="list"></param>
            <param name="ClilocID"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.ClilocHelper.Contains(System.Collections.Generic.List{StealthAPI.ClilocItemRec},System.Collections.Generic.List{System.UInt32})">
            <summary>
            Function returns true when list contain all clilocID´s from clist.
            </summary>
            <param name="list"></param>
            <param name="clist"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.ClilocHelper.ContainsAny(System.Collections.Generic.List{StealthAPI.ClilocItemRec},System.Collections.Generic.List{System.UInt32})">
            <summary>
            Function returns true when list contains any ClilocID from clist.
            </summary>
            <param name="list"></param>
            <param name="clist"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.ClilocHelper.GetParams(System.Collections.Generic.List{StealthAPI.ClilocItemRec},System.UInt32,System.Boolean)">
            <summary>
            Function returns in proper datatype converted parameters of required cliloc.
            Allows to either get Text of subclilocs or ClilocID. 
            </summary>
            <param name="list"></param>
            <param name="ClilocID"></param>
            <param name="ConvertSubs"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.ClilocHelper.GetParams(System.Collections.Generic.List{StealthAPI.ClilocItemRec},System.Collections.Generic.List{System.UInt32},System.Boolean)">
            <summary>
            Function allows to handle multiple params by utilizing GetParams(list,ClilocID,ConvertSubs).
            </summary>
            <param name="list"></param>
            <param name="clist"></param>
            <param name="ConvertSubs"></param>
            <returns></returns>
        </member>
        <member name="T:ScriptSDK.Engines.EasyUOHelper">
            <summary>
            EasyUOHelper stores different converter and transmission functions.
            </summary>
        </member>
        <member name="M:ScriptSDK.Engines.EasyUOHelper.SetData(System.Int32,System.String)">
            <summary>
            Sets data to registry, where EASYUO could read. SetData(1,Text) is equilavent to "set *1 Text".
            </summary>
            <param name="nspace"></param>
            <param name="value"></param>
        </member>
        <member name="M:ScriptSDK.Engines.EasyUOHelper.GetData(System.Int32)">
            <summary>
            Gets data from registry, where EASYUO could write. GetData(1) is reading from data stored through "set *1 Text".
            </summary>
            <param name="nspace"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.EasyUOHelper.ConvertToStealthType(System.String)">
            <summary>
            Function allows to convert EUO-Type to Stealth Type.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.EasyUOHelper.ConvertToStealthType(System.Collections.Generic.List{System.String})">
            <summary>
            Function allows to convert a list of EUO-Types to a list of Stealth-Types.
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.EasyUOHelper.ConvertToStealthID(System.String)">
            <summary>
            Function allows to convert EUO-ID to Stealth ID.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.EasyUOHelper.ConvertToStealthID(System.Collections.Generic.List{System.String})">
            <summary>
            Function allows to convert a list of EUO-ID´s to a list of Stealth-ID´s.
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="T:ScriptSDK.Engines.GameClient">
            <summary>
            The class game client expose functions related to the stealth client.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.GameClient.ConnectorDelay">
            <summary>
            Stores the delay the connection system would use. Default Value is 1000 ms.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.GameClient.DisconnectorDelay">
            <summary>
            Stores the delay the disconnection system would use. Default Value is 1000 ms.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.GameClient.ProfileChangerDelay">
            <summary>
            Stores the delay for profile changing system would use. Default Value is 1000 ms.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.GameClient.SilentMode">
            <summary>
            Gets or sets the silentmode wich allows to control if the client should show logs or not.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.GameClient.Connected">
            <summary>
            Returns if account is connected.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.GameClient.AutoConnect">
            <summary>
            Gets or sets the auto reconnector mode.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.GameClient.ProfileName">
            <summary>
            Returns the profile name.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.GameClient.ShardName">
            <summary>
            Returns the real shardname.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.GameClient.ProfileShardName">
            <summary>
            Returns the shardname selected on profil options (ie from config).
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.GameClient.LastLogin">
            <summary>
            Timestamp of last successful login.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.GameClient.LastLogout">
            <summary>
            Timestamp of last disconnection.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.GameClient.ProxyIP">
            <summary>
            Returns stored proxy ip if stored in Stealth configuration.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.GameClient.ProxyPort">
            <summary>
            Returns stored proxy port if stored in Stealth configuration.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.GameClient.ActiveProxy">
            <summary>
            Returns if stored proxy has been enabled.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.GameClient.ShardIP">
            <summary>
             Returns ShardIP\DNS 
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.GameClient.StealthPath">
            <summary>
            Returns stealth installation path.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.GameClient.StealthProfilePath">
            <summary>
            Returns stealth profile path.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.GameClient.ShardPath">
            <summary>
            Returns shard path.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.GameClient.ScriptPath">
            <summary>
            Returns application path.
            </summary>
        </member>
        <member name="M:ScriptSDK.Engines.GameClient.GetClient">
            <summary>
            Singleton object returns object reference to client.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.GameClient.Connect(System.Boolean)">
            <summary>
            function tries to connect client to server.<br/>
            Optimization describes a dynamic process instead of a static delay.
            </summary>
            <param name="optimization"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.GameClient.Connect(System.String,System.Boolean)">
            <summary>
            Function tries to change profile and then try to connect client to server.<br/>
            Optimization describes a dynamic process instead of a static delay.
            </summary>
            <param name="profilename"></param>
            <param name="optimization"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.GameClient.Disconnect(System.Boolean)">
            <summary>
            Function tries to disconnect character from server.<br/>
            Optimization describes a dynamic process instead of a static delay.
            </summary>
            <param name="optimization"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.GameClient.ChangeProfile(System.String,System.Boolean)">
            <summary>
            Function tries to change profile. Only works when client is not connected.<br/>
            Optimization describes a dynamic process instead of a static delay.
            </summary>
            <param name="profilename"></param>
            <param name="optimization"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.GameClient.ChangeCharacter(System.String,System.Boolean)">
            <summary>
            Function tries to disconnect account, then change profile and last but not atleast reconnect new profile.<br/>
            Optimization describes a dynamic process instead of a static delay.
            </summary>
            <param name="profilename"></param>
            <param name="optimization"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.GameClient.GetInfo">
            <summary>
            Function returns data about Stealth client.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.GameClient.SendGlobalMessage(ScriptSDK.Engines.GameMessage)">
            <summary>
            Function sends a global message any profile runned by linked stealth client can read or parse.
            </summary>
            <param name="Msg"></param>
        </member>
        <member name="M:ScriptSDK.Engines.GameClient.ReadGlobalMessage(StealthAPI.VarRegion,System.String)">
            <summary>
            Function reads a global message any profile runned by linked stealth client could had written.
            </summary>
            <param name="region"></param>
            <param name="regionname"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.GameClient.PlaySound(System.String)">
            <summary>
            Plays sound file of given filepath.doesnt require the ".wav" exensíon.
            </summary>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.GameClient.SetAlarm">
            <summary>
            This function let flash the stealth icon red on system tray.
            </summary>
        </member>
        <member name="M:ScriptSDK.Engines.GameClient.AddToInfoWindow(System.String)">
            <summary>
            Sends text to info window box.
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:ScriptSDK.Engines.GameClient.ClearInfoWindow">
            <summary>
            Clears info window box.
            </summary>
        </member>
        <member name="M:ScriptSDK.Engines.GameClient.GetGraphic(System.UInt32,System.UInt16)">
            <summary>
            Reads graphic from art.uop\mul.
            </summary>
            <param name="GraphicType"></param>
            <param name="GraphicColor"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.GameClient.CheckLag(System.Int32)">
            <summary>
            Sends "click on backpack" two times and records the delay. Returns true if the delay is within timeoutinMS.
            </summary>
            <param name="timeoutMS"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.GameClient.CheckLOS(System.Int32,System.Int32,System.SByte,System.Int32,System.Int32,System.SByte,System.Byte)">
            <summary>
            Function returns if the two points are in line of sight.
            </summary>
            <param name="xf"></param>
            <param name="yf"></param>
            <param name="zf"></param>
            <param name="xt"></param>
            <param name="yt"></param>
            <param name="zt"></param>
            <param name="worldNum"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.GameClient.UnsetCatchBag">
            <summary>
            Clears catch bag.
            </summary>
        </member>
        <member name="M:ScriptSDK.Engines.GameClient.SetCatchBag(System.UInt32)">
            <summary>
            Sets catch bag.
            </summary>
            <param name="objectId"></param>
            <returns></returns>
        </member>
        <member name="P:ScriptSDK.Engines.GameClient.Player">
            <summary>
            Returns reference to player.
            </summary>
        </member>
        <member name="T:ScriptSDK.Engines.GameMessage">
            <summary>
            Structure is designed storing messages.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.GameMessage.Region">
            <summary>
            Stores message namespace
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.GameMessage.Name">
            <summary>
            Stores attribute name.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.GameMessage.Value">
            <summary>
            Stores attribute value.
            </summary>
        </member>
        <member name="T:ScriptSDK.Engines.ICQClient">
            <summary>
            ICQClient expose handles, actions and properties of being an ICQ clone and can be used to read or write messages <br/>
            while scripting.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.ICQClient.Status">
            <summary>
            Returns ICQ status.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.ICQClient.XStatus">
            <summary>
            Returns ICQ X-tra status.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.ICQClient.EnableLogging">
            <summary>
            Gets or sets if logging of incoming and outgoing messages is wanted.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.ICQClient.SndMessages">
            <summary>
            Stores outgoing messages.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.ICQClient.RcvMessages">
            <summary>
            Stores incoming messages.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.ICQClient.Connected">
            <summary>
            Returns if client is connected to server.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.ICQClient.Event_Disconnect">
            <summary>
            Event which occurs when client disconnects from server.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.ICQClient.Event_Connect">
            <summary>
            Event which occirs when client connects to server.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.ICQClient.Event_IncomingMessage">
            <summary>
            ICQ event which occurs on incoming messages.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.ICQClient.Event_Error">
            <summary>
            ICQ event when any error occur.
            </summary>
        </member>
        <member name="M:ScriptSDK.Engines.ICQClient.GetClient">
            <summary>
            Returns reference to ICQ client.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.ICQClient.Connect(System.UInt32,System.String)">
            <summary>
            Tries to connect stealth to icq server.
            </summary>
            <param name="ID"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.ICQClient.RegisterUser(System.UInt32,System.String)">
            <summary>
            Adds a user UIN to user list. Note : This only registers user on SDK cache, if you stop application this will be lost.
            </summary>
            <param name="ID"></param>
            <param name="Name"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.ICQClient.Disconnect">
            <summary>
            Performs a disconnection from icq server.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.ICQClient.SendMessage(System.UInt32,System.String)">
            <summary>
            Sends Message to determined user.
            </summary>
            <param name="ID"></param>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.ICQClient.SendMessage(System.String,System.String)">
            <summary>
            Sends Message to determined user in userlist of ICQ client.
            </summary>
            <param name="user"></param>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="T:ScriptSDK.Engines.ICQMessage">
            <summary>
            Structure for handle ICQ messages.
            </summary>
        </member>
        <member name="M:ScriptSDK.Engines.ICQMessage.#ctor(System.UInt32,System.String)">
            <summary>
            Default Constructor.
            </summary>
            <param name="SenderID"></param>
            <param name="Msg"></param>
        </member>
        <member name="P:ScriptSDK.Engines.ICQMessage.Sender">
            <summary>
            Stores informations about sender\receivant.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.ICQMessage.Message">
            <summary>
            Stores text message.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.ICQMessage.Timestamp">
            <summary>
            Stores timestamp of message.
            </summary>
        </member>
        <member name="T:ScriptSDK.Engines.Scanner">
            <summary>
            Generic scanner class wich expose the basical handlings for advanced queued searchs.
            Don't forget to call SDK.Initiliaze() if you want this class to use sane defaults.
            </summary>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.Initialize">
            <summary>
            Do not use this. Check SDK.Initialize();
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.Scanner.AutoGCMode">
            <summary>
            Gets or sets the pseudo garbage collector for stealth.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.Scanner.GCDelay">
            <summary>
            Gets or sets the garbage collector delay.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.Scanner.VerticalRange">
            <summary>
            Gets or sets the vertical (Z-Axis) scanner range.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.Scanner.Range">
            <summary>
            Gets or sets the horizontal (X-Y-Axis) scanner range.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.Scanner.UseNullPoint">
            <summary>
            Gets or sets if the nullpoint (e.q. under feet) can be used.
            </summary>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.Find``1(System.Collections.Generic.List{System.UInt16},System.Collections.Generic.List{System.UInt16},System.Collections.Generic.List{System.UInt32},System.Boolean)">
            <summary>
            Generic Search by graphics, colors, locations and allows recursive sub search in container.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="Graphics"></param>
            <param name="Colors"></param>
            <param name="Locations"></param>
            <param name="SubSearch"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.Find``1(System.Collections.Generic.List{System.UInt16},System.Collections.Generic.List{ScriptSDK.Data.Notoriety})">
            <summary>
            Generic Search by graphics and notorieties.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="Graphics"></param>
            <param name="Notorieties"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.Find``1(System.Collections.Generic.List{ScriptSDK.Data.Point2D})">
            <summary>
            Generic Search by map locations.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="Points"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.Find``1(System.Collections.Generic.List{System.Type},System.Collections.Generic.List{System.UInt32},System.Boolean)">
            <summary>
            Generic search by custom attributes such as QueryTypeAttribute and QuerySearchAttribute.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="Types"></param>
            <param name="Locations"></param>
            <param name="SubSearch"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.Find``1(System.Collections.Generic.List{System.UInt16},System.Collections.Generic.List{System.UInt16},System.UInt32,System.Boolean)">
            <summary>
            Generic Search by graphics, colors, locations and allows recursive sub search in container.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="Graphics"></param>
            <param name="Colors"></param>
            <param name="Locations"></param>
            <param name="SubSearch"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.Find``1(System.Collections.Generic.List{System.UInt16},System.UInt16,System.Collections.Generic.List{System.UInt32},System.Boolean)">
            <summary>
            Generic Search by graphics, colors, locations and allows recursive sub search in container.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="Graphics"></param>
            <param name="Colors"></param>
            <param name="Locations"></param>
            <param name="SubSearch"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.Find``1(System.Collections.Generic.List{System.UInt16},System.UInt16,System.UInt32,System.Boolean)">
            <summary>
            Generic Search by graphics, colors, locations and allows recursive sub search in container.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="Graphics"></param>
            <param name="Colors"></param>
            <param name="Locations"></param>
            <param name="SubSearch"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.Find``1(System.UInt16,System.Collections.Generic.List{System.UInt16},System.UInt32,System.Boolean)">
            <summary>
            Generic Search by graphics, colors, locations and allows recursive sub search in container.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="Graphics"></param>
            <param name="Colors"></param>
            <param name="Locations"></param>
            <param name="SubSearch"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.Find``1(System.UInt16,System.UInt16,System.Collections.Generic.List{System.UInt32},System.Boolean)">
            <summary>
            Generic Search by graphics, colors, locations and allows recursive sub search in container.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="Graphics"></param>
            <param name="Colors"></param>
            <param name="Locations"></param>
            <param name="SubSearch"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.Find``1(System.UInt16,System.UInt16,System.UInt32,System.Boolean)">
            <summary>
            Generic Search by graphics, colors, locations and allows recursive sub search in container.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="Graphics"></param>
            <param name="Colors"></param>
            <param name="Locations"></param>
            <param name="SubSearch"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.Find``1(System.Collections.Generic.List{System.UInt16},ScriptSDK.Data.Notoriety)">
            <summary>
            Generic Search by graphics and notorieties.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="Graphics"></param>
            <param name="Notorieties"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.Find``1(System.UInt16,System.Collections.Generic.List{ScriptSDK.Data.Notoriety})">
            <summary>
            Generic Search by graphics and notorieties.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="Graphics"></param>
            <param name="Notorieties"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.Find``1(System.UInt16,ScriptSDK.Data.Notoriety)">
            <summary>
            Generic Search by graphics and notorieties.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="Graphics"></param>
            <param name="Notorieties"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.Find``1(ScriptSDK.Data.Point2D)">
            <summary>
            Generic Search by map locations.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="Point"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.Find``1(System.Int32,System.Int32)">
            <summary>
            Generic Search by map locations.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="X"></param>
            <param name="Y"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.Find``1(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Boolean)">
            <summary>
            Generic Search by map locations.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="X"></param>
            <param name="Y"></param>
            <param name="MixedPattern"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.Find``1(ScriptSDK.Data.Point2D,ScriptSDK.Data.Point2D)">
            <summary>
            Generic Search by map locations.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.Find``1(System.Collections.Generic.List{System.Type},System.UInt32,System.Boolean)">
            <summary>
            Generic search by custom attributes such as QueryTypeAttribute and QuerySearchAttribute.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="Types"></param>
            <param name="Location"></param>
            <param name="SubSearch"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.Find``1(System.Type,System.UInt32,System.Boolean)">
            <summary>
            Generic search by custom attributes such as QueryTypeAttribute and QuerySearchAttribute.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="Type"></param>
            <param name="Location"></param>
            <param name="SubSearch"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.Find``1(System.Type,System.Collections.Generic.List{System.UInt32},System.Boolean)">
            <summary>
            Generic search by custom attributes such as QueryTypeAttribute and QuerySearchAttribute.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="Type"></param>
            <param name="Locations"></param>
            <param name="SubSearch"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.Find``1(System.UInt32,System.Boolean)">
            <summary>
            Generic search by custom attributes such as QueryTypeAttribute and QuerySearchAttribute.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="Location"></param>
            <param name="SubSearch"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.Find``1(System.Collections.Generic.List{System.UInt32},System.Boolean)">
            <summary>
            Generic search by custom attributes such as QueryTypeAttribute and QuerySearchAttribute.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="Locations"></param>
            <param name="SubSearch"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.Ignore(System.UInt32)">
            <summary>
            Adds object Id to ignore list.
            </summary>
            <param name="ID"></param>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.Ignore(ScriptSDK.Serial)">
            <summary>
            Adds serial to ignore list.
            </summary>
            <param name="serial"></param>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.Ignore(ScriptSDK.UOEntity)">
            <summary>
            Adds entity to ignore list.
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.Ignore(System.Collections.Generic.List{System.UInt32})">
            <summary>
            Adds multiple object ID´s to ignore list.
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.Ignore(System.Collections.Generic.List{ScriptSDK.Serial})">
            <summary>
            Adds multiple serials to ignore list.
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.Ignore(System.Collections.Generic.List{ScriptSDK.UOEntity})">
            <summary>
            Adds multiple entities to ignore list.
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.ClearIgnoreList">
            <summary>
            clears ignorelist.
            </summary>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.IgnoreRemove(System.UInt32)">
            <summary>
            Removes object ID from ignore list.
            </summary>
            <param name="ID"></param>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.IgnoreRemove(ScriptSDK.Serial)">
            <summary>
             Removes serial from ignore list.
            </summary>
            <param name="serial"></param>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.IgnoreRemove(ScriptSDK.UOEntity)">
            <summary>
             Removes entity from ignore list.
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.IgnoreRemove(System.Collections.Generic.List{ScriptSDK.UOEntity})">
            <summary>
             Removes multiple entities from ignore list.
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.IgnoreRemove(System.Collections.Generic.List{ScriptSDK.Serial})">
            <summary>
             Removes serials from ignore list.
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.IgnoreRemove(System.Collections.Generic.List{System.UInt32})">
            <summary>
             Removes multiple object ID´s from ignore list.
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.FindItems">
            <summary>
            Function returns all valid items in range.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.Scanner.FindMobiles">
            <summary>
            Function returns all valid mobiles in range.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ScriptSDK.Engines.ScriptLogger">
            <summary>
            Scriptlogger class expose handles, actions and properties of logging script content.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.ScriptLogger.LogToStealth">
            <summary>
            Gets or sets if messages via Write\Writeline are exposed to stealth.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.ScriptLogger.LogToIDE">
            <summary>
            Gets or sets if messages via Write\Writeline are exposed to IDE\Compiler.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.ScriptLogger.LogToConsole">
            <summary>
            Gets or sets if messages via Write\Writeline are exposed to windows console (if possible).
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.ScriptLogger.LogToFile">
            <summary>
            Gets or sets if messages via Write\Writeline are exposed to  file.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.ScriptLogger.FileName">
            <summary>
            Gets or sets file name for file logger.
            </summary>
        </member>
        <member name="E:ScriptSDK.Engines.ScriptLogger.OnLogging">
            <summary>
            Event wich will be fired whenever Write or Writeline will be called.
            </summary>
        </member>
        <member name="M:ScriptSDK.Engines.ScriptLogger.Initialize">
            <summary>
            Initializer wich is obsole by user. Please check SDK.Initialize()!
            </summary>
        </member>
        <member name="M:ScriptSDK.Engines.ScriptLogger.Write(System.String)">
            <summary>
            Writes text message without line break.
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:ScriptSDK.Engines.ScriptLogger.WriteLine(System.String)">
            <summary>
            Writes text message with line break.
            </summary>
            <param name="text"></param>
        </member>
        <member name="T:ScriptSDK.Engines.TileReader">
            <summary>
            Tilereader class is a very extended class allowing to read and handle actions towards tiles.
            </summary>
        </member>
        <member name="M:ScriptSDK.Engines.TileReader.Initialize">
            <summary>
            This function should be always called once before handling the tilereader.
            Not required to be called when SDK.Initialize has been called before.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.TileReader.TreeTiles">
            <summary>
            Stores a list of valid tree tiles. Preset via Initialize().
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.TileReader.MountainTiles">
            <summary>
             Stores a list of valid mountain tiles. Preset via Initialize().
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.TileReader.CaveTiles">
            <summary>
             Stores a list of valid cave tiles. Preset via Initialize().
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.TileReader.SandTiles">
            <summary>
             Stores a list of valid sand tiles. Preset via Initialize().
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.TileReader.StealthOffset">
            <summary>
            This is an offset the developer can set when tiles arent found. By some reasons 
            It seems some shards having an offset which can differ. Preset use the base of ServUO\JustUO 
            core. May differ on other servers.
            </summary>
        </member>
        <member name="M:ScriptSDK.Engines.TileReader.GetMiningSpots(System.Int32)">
            <summary>
            Function try to parse useable locations for mining around a distance from player.
            </summary>
            <param name="Distance"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.TileReader.GetMiningSpots(ScriptSDK.Data.Point2D,ScriptSDK.Data.Point2D)">
            <summary>
            Function try to parse useable locations for mining on a certain area.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.TileReader.GetLumberSpots(System.Int32)">
            <summary>
            Function try to parse useable locations for lumberjacking around a range from player.
            </summary>
            <param name="Distance"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.TileReader.GetLumberSpots(ScriptSDK.Data.Point2D,ScriptSDK.Data.Point2D)">
            <summary>
            Function try to parse useable locations for mining on a certain area.
            </summary>
            <param name="start"></param>
            <param name="end"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.TileReader.GetTileFlags(StealthAPI.TileFlagsType,System.UInt16)">
            <summary>
            Reads Tileflags from specific tile on uo data.
            </summary>
            <param name="tileGroup"></param>
            <param name="tile"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.TileReader.ConvertFlagsToFlagSet(StealthAPI.TileFlagsType,System.UInt16)">
            <summary>
            Reads Tileflags from specific tile on uo data and converts them.
            </summary>
            <param name="tileGroup"></param>
            <param name="tile"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.TileReader.GetLandTileData(System.UInt16)">
            <summary>
            Allows to read Landtiledata from uo data through passed tile.
            </summary>
            <param name="tile"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.TileReader.GetStaticTileData(System.UInt16)">
            <summary>
            Allows to read static tile data from uo data through passed tile.
            </summary>
            <param name="tile"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.TileReader.GetStaticTilesArray(System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.UInt16,ScriptSDK.Data.Map)">
            <summary>
            Reads static tile data on passed area. Requires to parse uo data (UOP or MUL).
            </summary>
            <param name="xMin"></param>
            <param name="yMin"></param>
            <param name="xMax"></param>
            <param name="yMax"></param>
            <param name="tileType"></param>
            <param name="map"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.TileReader.GetStaticTilesArray(System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.Byte,System.UInt16)">
             <summary>
            Reads static tile data on passed area. Requires to parse uo data (UOP or MUL).
             </summary>
             <param name="xMin"></param>
             <param name="yMin"></param>
             <param name="xMax"></param>
             <param name="yMax"></param>
             <param name="worldnum"></param>
             <param name="tileType"></param>
             <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.TileReader.GetStaticTilesArray(System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Reads land static data on passed area. Requires to parse uo data (UOP or MUL).
            </summary>
            <param name="xMin"></param>
            <param name="yMin"></param>
            <param name="xMax"></param>
            <param name="yMax"></param>
            <param name="tileType"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.TileReader.GetLandTilesArray(System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.UInt16,ScriptSDK.Data.Map)">
            <summary>
            Reads land tile data on passed area. Requires to parse uo data (UOP or MUL).
            </summary>
            <param name="xMin"></param>
            <param name="yMin"></param>
            <param name="xMax"></param>
            <param name="yMax"></param>
            <param name="tileType"></param>
            <param name="map"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.TileReader.GetLandTilesArray(System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.Byte)">
            <summary>
            Reads land tile data on passed area. Requires to parse uo data (UOP or MUL).
            </summary>
            <param name="xMin"></param>
            <param name="yMin"></param>
            <param name="xMax"></param>
            <param name="yMax"></param>
            <param name="tileType"></param>
            <param name="worldnum"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.TileReader.GetLandTilesArray(System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Reads land tile data on passed area. Requires to parse uo data (UOP or MUL).
            </summary>
            <param name="xMin"></param>
            <param name="yMin"></param>
            <param name="xMax"></param>
            <param name="yMax"></param>
            <param name="tileType"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.TileReader.GetCell(System.UInt16,System.UInt16,System.Byte)">
            <summary>
            Reads MapCell from specific map point.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="worldnum"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.TileReader.GetCell(System.UInt16,System.UInt16,ScriptSDK.Data.Map)">
            <summary> 
            Reads MapCell from specific map point.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="map"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.TileReader.GetCell(System.UInt16,System.UInt16)">
            <summary> 
            Reads MapCell from specific map point.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.TileReader.GetLayerCount(System.UInt16,System.UInt16,ScriptSDK.Data.Map)">
            <summary>
            Returns amount of layers on specific map point.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="map"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.TileReader.GetLayerCount(System.UInt16,System.UInt16,System.Byte)">
            <summary>
            Returns amount of layers on specific map point.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="worldnum"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.TileReader.GetLayerCount(System.UInt16,System.UInt16)">
            <summary>
            Returns amount of layers on specific map point.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.TileReader.ReadStaticsXY(System.UInt16,System.UInt16)">
            <summary>
            Allows to read static item on x/y-axis.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.TileReader.ReadStaticsXY(System.UInt16,System.UInt16,System.Byte)">
            <summary>
            Allows to read static item on x/y-axis.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="worldnum"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.TileReader.ReadStaticsXY(System.UInt16,System.UInt16,ScriptSDK.Data.Map)">
            <summary>
            Allows to read static item on x/y-axis.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="map"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.TileReader.GetSurfaceZ(System.UInt16,System.UInt16)">
            <summary>
            Reads the surfaced z from destined point.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.TileReader.GetSurfaceZ(System.UInt16,System.UInt16,System.Byte)">
            <summary>
            Reads the surfaced z from destined point.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="worldnum"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.TileReader.GetSurfaceZ(System.UInt16,System.UInt16,ScriptSDK.Data.Map)">
            <summary>
            Reads the surfaced z from destined point.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="map"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.TileReader.IsWorldCellPassable(System.UInt16,System.UInt16,System.SByte,System.UInt16,System.UInt16,System.SByte@)">
            <summary>
            Function returns if destined cell is passable. I have to guess because there is no proper documentation about this code.
            I think this function is something like a line of sight check from your location to next location.
            </summary>
            <param name="currX"></param>
            <param name="currY"></param>
            <param name="currZ"></param>
            <param name="destX"></param>
            <param name="destY"></param>
            <param name="destZ"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.TileReader.IsWorldCellPassable(System.UInt16,System.UInt16,System.SByte,System.UInt16,System.UInt16,System.SByte@,System.Byte)">
            <summary>
            Function returns if destined cell is passable. I have to guess because there is no proper documentation about this code.
            I think this function is something like a line of sight check from your location to next location.
            </summary>
            <param name="currX"></param>
            <param name="currY"></param>
            <param name="currZ"></param>
            <param name="destX"></param>
            <param name="destY"></param>
            <param name="destZ"></param>
            <param name="WorldNum"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Engines.TileReader.IsWorldCellPassable(System.UInt16,System.UInt16,System.SByte,System.UInt16,System.UInt16,System.SByte@,ScriptSDK.Data.Map)">
            <summary>
            Function returns if destined cell is passable. I have to guess because there is no proper documentation about this code.
            I think this function is something like a line of sight check from your location to next location.
            </summary>
            <param name="currX"></param>
            <param name="currY"></param>
            <param name="currZ"></param>
            <param name="destX"></param>
            <param name="destY"></param>
            <param name="destZ"></param>
            <param name="map"></param>
            <returns></returns>
        </member>
        <member name="T:ScriptSDK.Engines.UacHelper">
            <summary>
            Supporting class for applications which requires admin rights.
            Code has been taken from http://stackoverflow.com/questions/1220213/detect-if-running-as-administrator-with-or-without-elevated-privileges 
            and been updated to be clean code.
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.UacHelper.IsUacEnabled">
            <summary>
            Stores if UAC-Control on operating system is enabled. See more: https://en.wikipedia.org/wiki/User_Account_Control .
            </summary>
        </member>
        <member name="P:ScriptSDK.Engines.UacHelper.IsProcessElevated">
            <summary>
            Stores if the application who calls this function has been executed with admin rights.
            </summary>
        </member>
        <member name="T:ScriptSDK.Items.Item">
            <summary>
            Item class expose functions and properties to handle and manage actions about any mobile.
            </summary>	
            <example>
            Example #1 Doing a generic search via Item.Find.
            <code language="CSharp">
            <![CDATA[
                List<uint> locations = new List<uint>();
                locations.Add(0x0); // Ground
                //We designed a Class Dagger wich inherited from Item and had search params
                List<Item> search = Item.Find(typeof(Dagger),locations,true;
            ]]>
            </code>
            </example>
            <example>
            Example #2 Another way of doing a generic search via Item.Find.   
            <code language="CSharp">
            <![CDATA[
                List<uint> locations = new List<uint>();
                locations.Add(0x0); // Ground
                List<Type> types = new List<Type>();
                types.Add(typeof(Dagger));
                types.Add(typeof(Sword)); 
                //We designed a Class Dagger and a Class Sword which inherited from Item and had search params
                List<Item> search = Item.Find(types,locations,true;
            ]]>
            </code>
            </example>
            <example>
            Example #3 Yet another way of generic search via Item.Find.
            <code language="CSharp">
            <![CDATA[
                //We designed a Class Dagger and a class Sword which inherited from Item and had search params
                List<Item> search = Item.Find(typeof(Dagger),0x0,true;
            ]]>
            </code>
            </example>      
            <example>
            Example #4 Last way of generic search via Item.Find
            <code language="CSharp">
            <![CDATA[
                List<Type> types = new List<Type>();
                types.Add(typeof(Sword));
                types.Add(typeof(Dagger)); 
                //We designed a Class Sword and a Class Dagger which inherited from Item and had search params
                List<Item> search = Item.Find(types,0x0,true;
            ]]>
            </code>
            </example>
        </member>
        <member name="M:ScriptSDK.Items.Item.#ctor(System.UInt32)">
            <summary>
            Alternative constructor.
            </summary>
            <param name="ObjectID"></param>
        </member>
        <member name="M:ScriptSDK.Items.Item.#ctor(ScriptSDK.Serial)">
            <summary>
            Default constructor.
            </summary>
            <param name="serial"></param>
        </member>
        <member name="P:ScriptSDK.Items.Item.LootType">
            <summary>
            Returns the loottype of item object.
            </summary>
        </member>
        <member name="P:ScriptSDK.Items.Item.RequiredRace">
            <summary>
            Returns current race requirements.
            </summary>
        </member>
        <member name="P:ScriptSDK.Items.Item.IsQuestItem">
            <summary>
            Returns current state, if item is a quest item.
            </summary>
        </member>
        <member name="P:ScriptSDK.Items.Item.SecureLevel">
            <summary>
            Returns current secure level.
            </summary>
        </member>
        <member name="P:ScriptSDK.Items.Item.Weight">
            <summary>
            Returns current weigth.
            </summary>
        </member>
        <member name="P:ScriptSDK.Items.Item.Amount">
            <summary>
            Returns current amount.
            </summary>
        </member>
        <member name="P:ScriptSDK.Items.Item.BlessedFor">
            <summary>
            Returns current informations about personal blessing.
            </summary>
        </member>
        <member name="P:ScriptSDK.Items.Item.Price">
            <summary>
            Returns current price, if item is on vendor list (NPC).
            </summary>
        </member>
        <member name="P:ScriptSDK.Items.Item.IsContainer">
            <summary>
            Returns if object contains idenfitication as container.
            </summary>
        </member>
        <member name="P:ScriptSDK.Items.Item.Insured">
            <summary>
            Returns if item is insured
            </summary>
        </member>
        <member name="P:ScriptSDK.Items.Item.IsSecured">
            <summary>
            Returns if item is secured.
            </summary>
        </member>
        <member name="P:ScriptSDK.Items.Item.IsLockedDown">
            <summary>
            Returns if item is lockdown.
            </summary>
        </member>
        <member name="P:ScriptSDK.Items.Item.DefaultLabelNumber">
            <summary>
            Returns the default labelnumber based on graphic type.
            </summary>
        </member>
        <member name="P:ScriptSDK.Items.Item.QuestItemHue">
            <summary>
            Stores the default color for quest markup.
            </summary>
        </member>
        <member name="P:ScriptSDK.Items.Item.NonTransferable">
            <summary>
            Stores if item can be transfered.
            </summary>
        </member>
        <member name="P:ScriptSDK.Items.Item.WearableByGargoyles">
            <summary>
            Returns if gargoyles could wear the item.
            </summary>
        </member>
        <member name="P:ScriptSDK.Items.Item.WearableByElves">
            <summary>
            Returns if elvs could wear the item.
            </summary>
        </member>
        <member name="P:ScriptSDK.Items.Item.PickedItem">
            <summary>
            Sets or gets item to "I must be picked as next" for drag operations.
            </summary>
        </member>
        <member name="P:ScriptSDK.Items.Item.CheckLocationBeforeDrop">
            <summary>
            Gets or sets if the location must be validated before allowing drop actions.
            </summary>
        </member>
        <member name="P:ScriptSDK.Items.Item.DropDelay">
            <summary>
            Gets or sets the dropdelay which is equivalent to ObjectOptions.DropDelay.
            </summary>
        </member>
        <member name="P:ScriptSDK.Items.Item.AllowEquipedCast">
            <summary>
            Returns always false because it´s a dummy for further inheritence.
            </summary>
        </member>
        <member name="P:ScriptSDK.Items.Item.Movable">
            <summary>
            Returns if the object theoretical could be moved.
            </summary>
        </member>
        <member name="M:ScriptSDK.Items.Item.CheckBlessed(System.Object)">
            <summary>
            Returns if the object is blessed for passed object.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Items.Item.CheckBlessed(ScriptSDK.Mobiles.Mobile)">
            <summary>
            Returns if the object is blessed for passed mobile.
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Items.Item.ToString">
            <summary>
            Pass item and formats it properly to string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Items.Item.IsUnderYourFeet(ScriptSDK.UOEntity)">
            <summary>
            Returns true if object is right under players feet.
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Items.Item.Find(System.Type,System.Collections.Generic.List{System.UInt32},System.Boolean)">
            <summary> 
            Generic Search for Item.
            </summary>
            <param name="type"></param>
            <param name="Locations"></param>
            <param name="SubSearch"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Items.Item.Find(System.Collections.Generic.List{System.Type},System.Collections.Generic.List{System.UInt32},System.Boolean)">
            <summary>
            Generic Search for Item.
            </summary>
            <param name="types"></param>
            <param name="Locations"></param>
            <param name="SubSearch"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Items.Item.Find(System.Type,System.UInt32,System.Boolean)">
            <summary>
            Generic Search for Item.
            </summary>
            <param name="type"></param>
            <param name="Location"></param>
            <param name="SubSearch"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Items.Item.Find(System.Collections.Generic.List{System.Type},System.UInt32,System.Boolean)">
            <summary>
            Generic Search for Item.
            </summary>
            <param name="types"></param>
            <param name="Location"></param>
            <param name="SubSearch"></param>
            <returns></returns>
        </member>
        <member name="P:ScriptSDK.Items.Item.CanBeMoved">
            <summary>
            Returns if item theoreticly could be moved.
            </summary>
        </member>
        <member name="M:ScriptSDK.Items.Item.DropHere">
            <summary>
            Performs a drop action towards ground.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Items.Item.Drop">
            <summary>
            Performs a drop action towards backpack with random location and stacking (if object allows).
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Items.Item.Drop(ScriptSDK.Data.Point3D)">
            <summary>
            Performs a drop action towards backpack with location without stacking.
            </summary>
            <param name="location"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Items.Item.Drop(System.Int32,ScriptSDK.Data.Point3D)">
            <summary>
            Performs a drop action towards backpack with location without stacking but with customizeable amount.
            </summary>
            <param name="amount"></param>
            <param name="location"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Items.Item.DropItem(ScriptSDK.Items.Container)">
            <summary>
            Drops item into chosen container with random location and stacking (if object allows).
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Items.Item.DropItem(ScriptSDK.Items.Container,ScriptSDK.Data.Point3D)">
            <summary>
            Drops item into chosen container with chosen location and without stacking.
            </summary>
            <param name="target"></param>
            <param name="location"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Items.Item.DragItem(System.Int32)">
            <summary>
            Drags item with chosen amount.
            </summary>
            <param name="amount"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Items.Item.MoveItem(ScriptSDK.Items.Container)">
            <summary>
            Performs drag and drop action onto chosen container with random location and stacking(if object allows).
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Items.Item.MoveItem(ScriptSDK.Items.Container,System.Int32)">
            <summary>
            Performs drag and drop action onto chosen container with random location and stacking(if object allows) and chosen amount.
            </summary>
            <param name="target"></param>
            <param name="amount"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Items.Item.MoveItem(ScriptSDK.Items.Container,ScriptSDK.Data.Point3D)">
            <summary>
            Performs drag and drop action onto chosen container with location and without stacking.
            </summary>
            <param name="target"></param>
            <param name="location"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Items.Item.MoveItem(ScriptSDK.Items.Container,System.Int32,ScriptSDK.Data.Point3D)">
            <summary>
            Performs drag and drop action onto chosen container with location and without stacking and chosen amount.
            </summary>
            <param name="target"></param>
            <param name="amount"></param>
            <param name="location"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Items.Item.Grab">
            <summary>
            Performs drag and drop action towards backpack.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Items.Item.Grab(System.Int32)">
            <summary>
            Performs drag and drop action with chosen amount towards backpack.
            </summary>
            <param name="amount"></param>
            <returns></returns>
        </member>
        <member name="T:ScriptSDK.Items.Container">
            <summary>
            Container class expose functions and properties to handle and manage actions about any Container.
            </summary>
        </member>
        <member name="M:ScriptSDK.Items.Container.#ctor(System.UInt32)">
            <summary>
            Alternative constructor.
            </summary>
            <param name="ObjectID"></param>
        </member>
        <member name="M:ScriptSDK.Items.Container.#ctor(ScriptSDK.Serial)">
            <summary>
            Default constructor.
            </summary>
            <param name="serial"></param>
        </member>
        <member name="M:ScriptSDK.Items.Container.EmptyContainer(ScriptSDK.Items.Container,System.UInt16)">
            <summary>
            Function performs a mass moving from this container to another container, regardless of objects.
            </summary>
            <param name="Destination"></param>
            <param name="delay"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Items.Container.EmptyContainer(ScriptSDK.Items.Container)">
            <summary> 
            Function performs a mass moving from this container to another container, regardless of objects.
            </summary>
            <param name="Destination"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Items.Container.MoveItems(ScriptSDK.Items.Container)">
            <summary> 
            Function performs a mass moving from this container to another container, regardless of objects.
            </summary>
            <param name="dest"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Items.Container.MoveItems(ScriptSDK.Items.Container,System.Int32)">
            <summary> 
            Function performs a mass moving from this container to another container, regardless of objects.
            </summary>
            <param name="dest"></param>
            <param name="delay"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Items.Container.MoveItems(ScriptSDK.Items.Container,ScriptSDK.Data.Point3D)">
            <summary> 
            Function performs a mass moving from this container to another container, regardless of objects.
            </summary>
            <param name="dest"></param>
            <param name="location"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Items.Container.MoveItems(ScriptSDK.Items.Container,ScriptSDK.Data.Point3D,System.Int32)">
            <summary> 
            Function performs a mass moving from this container to another container, regardless of objects.
            </summary>
            <param name="dest"></param>
            <param name="location"></param>
            <param name="delay"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Items.Container.MoveItems(System.UInt16,System.UInt16,ScriptSDK.Items.Container)">
            <summary>
            Function performs a mass moving from this container to another container.
            </summary>
            <param name="type"></param>
            <param name="color"></param>
            <param name="dest"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Items.Container.MoveItems(System.UInt16,System.UInt16,ScriptSDK.Items.Container,System.Int32)">
            <summary>
            Function performs a mass moving from this container to another container.
            </summary>
            <param name="type"></param>
            <param name="color"></param>
            <param name="dest"></param>
            <param name="delay"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Items.Container.MoveItems(System.UInt16,System.UInt16,ScriptSDK.Items.Container,ScriptSDK.Data.Point3D)">
            <summary>
            Function performs a mass moving from this container to another container.
            </summary>
            <param name="type"></param>
            <param name="color"></param>
            <param name="dest"></param>
            <param name="location"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Items.Container.MoveItems(System.UInt16,System.UInt16,ScriptSDK.Items.Container,ScriptSDK.Data.Point3D,System.Int32)">
            <summary>
            Function performs a mass moving from this container to another container.
            </summary>
            <param name="type"></param>
            <param name="color"></param>
            <param name="dest"></param>
            <param name="location"></param>
            <param name="delay"></param>
            <returns></returns>
        </member>
        <member name="T:ScriptSDK.Mobiles.BaseCreature">
            <summary>
            BaseCreature class expose functions and properties to handle and manage actions about any creature wich is not a player.
            </summary>
        </member>
        <member name="M:ScriptSDK.Mobiles.BaseCreature.Rename(System.String)">
            <summary>
            Function will perform a rename request and return the result.
            </summary>
        </member>
        <member name="M:ScriptSDK.Mobiles.BaseCreature.#ctor(System.UInt32)">
            <summary>
            Alternate constructor.
            </summary>
        </member>
        <member name="M:ScriptSDK.Mobiles.BaseCreature.#ctor(ScriptSDK.Serial)">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.BaseCreature.CanBeRenamed">
            <summary>
            Returns if the creature can be renamed.
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.BaseCreature.CanBeDamaged">
            <summary>
            Returns if the creature can be damaged.
            </summary>
        </member>
        <member name="T:ScriptSDK.Mobiles.Mobile">
            <summary>
            Mobile class expose functions and properties to handle and manage actions about any mobile.
            </summary>
            <example>
            Example #1 Doing a generic search via Mobile.Find.
            <code language="CSharp">
            <![CDATA[
                List<uint> locations = new List<uint>();
                locations.Add(0x0); // Ground
                //We designed a Class Cow wich inherited from Mobile and had search params
                List<Mobile> mobilesearch = Mobile.Find(typeof(Cow),locations,true;
            ]]>
            </code>
            </example>
            <example>
            Example #2 Another way of doing a generic search via Mobile.Find.   
            <code language="CSharp">
            <![CDATA[
                List<uint> locations = new List<uint>();
                locations.Add(0x0); // Ground
                List<Type> types = new List<Type>();
                types.Add(typeof(Cow));
                types.Add(typeof(Dog)); 
                //We designed a Class Cow and a Class Dog which inherited from Mobile and had search params
                List<Mobile> mobilesearch = Mobile.Find(types,locations,true;
            ]]>
            </code>
            </example>
            <example>
            Example #3 Yet another way of generic search via Mobile.Find.
            <code language="CSharp">
            <![CDATA[
                //We designed a Class Cow and a Class Dog which inherited from Mobile and had search params
                List<Mobile> mobilesearch = Mobile.Find(typeof(Dog),0x0,true;
            ]]>
            </code>
            </example>      
            <example>
            Example #4 Last way of generic search via Mobile.Find
            <code language="CSharp">
            <![CDATA[
                List<Type> types = new List<Type>();
                types.Add(typeof(Cow));
                types.Add(typeof(Dog)); 
                //We designed a Class Cow and a Class Dog which inherited from Mobile and had search params
                List<Mobile> mobilesearch = Mobile.Find(types,0x0,true;
            ]]>
            </code>
            </example>
        </member>
        <member name="M:ScriptSDK.Mobiles.Mobile.#ctor(System.UInt32)">
            <summary>
             Alternate constructor.
            </summary>
            <param name="ObjectID"></param>
        </member>
        <member name="M:ScriptSDK.Mobiles.Mobile.#ctor(ScriptSDK.Serial)">
            <summary>
            Default constructor.
            </summary>
            <param name="serial"></param>
        </member>
        <member name="P:ScriptSDK.Mobiles.Mobile.IsRunning">
             <summary>
            Returns if mobile object is running.
             </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.Mobile.YellowHits">
             <summary>
            Returns if mobile object is immortal or mortaled.
             </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.Mobile.Poisoned">
            <summary>
            Returns if mobile object is poisoned.
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.Mobile.Paralyzed">
             <summary>
            Returns if mobile object is paralyzed.
             </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.Mobile.Hidden">
             <summary>
            Returns if mobile object is invisible.
             </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.Mobile.WarMode">
             <summary>
            Returns if mobile object is in combat mode.
             </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.Mobile.Hits">
             <summary>
            Returns current hit points.
             </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.Mobile.MaxHits">
             <summary>
            Returns maximum hit points.
             </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.Mobile.Mana">
             <summary>
            Returns current mana.
             </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.Mobile.MaxMana">
             <summary>
            Returns maximum mana.
             </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.Mobile.Stamina">
             <summary>
            Returns current stamina.
             </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.Mobile.MaxStamina">
             <summary>
            Returns maximum stamina.
             </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.Mobile.Notoriety">
             <summary>
            Returns current notoriety.
             </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.Mobile.Name">
             <summary>
            Returns current name.
             </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.Mobile.Title">
             <summary>
            Returns current title.
             </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.Mobile.AltName">
             <summary>
            Returns current alternate name.
             </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.Mobile.Gender">
             <summary>
            Returns current gender.
             </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.Mobile.Dead">
             <summary>
            Returns if mobile object is dead.
             </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.Mobile.IsNPC">
             <summary>
            Returns if mobile object gets identificated as NPC.
             </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.Mobile.Strength">
             <summary>
            Returns current strength.
             </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.Mobile.Intelligence">
             <summary>
            Returns current intelligence.
             </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.Mobile.Dexterity">
             <summary>
            Returns current dexterity.
             </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.Mobile.Paperdoll">
             <summary>
            Stores reference to paperdoll of mobile.
             </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.Mobile.HealthPercent">
             <summary>
            Returns percentage how much hitpoints towards maximum hitpoints.
             </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.Mobile.StaminaPercent">
             <summary>
            Returns percentage how much stamina towards maximum stamina.
             </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.Mobile.ManaPercent">
             <summary>
            Returns percentage how much mana towards maximum mana.
             </summary>
        </member>
        <member name="M:ScriptSDK.Mobiles.Mobile.RequestStats">
             <summary>
            Performs a mobile update packet request.
             </summary>
        </member>
        <member name="M:ScriptSDK.Mobiles.Mobile.OpenPaperdoll">
             <summary>
            Performs a request to open paperdoll.
             </summary>
        </member>
        <member name="M:ScriptSDK.Mobiles.Mobile.Find(System.Type,System.Collections.Generic.List{System.UInt32},System.Boolean)">
             <summary>
            Generic Search for mobiles.
             </summary>
        </member>
        <member name="M:ScriptSDK.Mobiles.Mobile.Find(System.Collections.Generic.List{System.Type},System.Collections.Generic.List{System.UInt32},System.Boolean)">
             <summary>
            Generic Search for mobiles.
             </summary>
        </member>
        <member name="M:ScriptSDK.Mobiles.Mobile.Find(System.Type,System.UInt32,System.Boolean)">
             <summary>
            Generic Search for mobiles.
             </summary>
        </member>
        <member name="M:ScriptSDK.Mobiles.Mobile.Find(System.Collections.Generic.List{System.Type},System.UInt32,System.Boolean)">
             <summary>
            Generic Search for mobiles.
             </summary>
        </member>
        <member name="T:ScriptSDK.Mobiles.PlayerMobile">
            <summary>
            PlayerMobile class expose functions and properties to handle and manage actions about player.
            </summary>		
        </member>
        <member name="M:ScriptSDK.Mobiles.PlayerMobile.GetPlayer">
            <summary>
            Returns the unique instance of player.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ScriptSDK.Mobiles.PlayerMobile.PhysResistence">
            <summary>
            Returns physical resistence.
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.PlayerMobile.FireResistence">
            <summary>
            Returns fire resistence.
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.PlayerMobile.ColdResistence">
            <summary>
            Returns cold resistence.
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.PlayerMobile.PoisonResistence">
            <summary>
            Returns cold resistence.
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.PlayerMobile.EnergyResistence">
            <summary>
            Returns energy resistence.
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.PlayerMobile.Race">
            <summary>
            Returns player race.
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.PlayerMobile.Weight">
            <summary>
            Returns current weight of backpack and paperdoll.
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.PlayerMobile.Maxweight">
            <summary>
            Returns maximum capacable weight.
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.PlayerMobile.RunMountTimer">
            <summary>
            Gets or sets the timer how pathfinding system could run mounted.<br/>
            Doesnt allow to move faster then server allows!
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.PlayerMobile.RunUnmountTimer">
            <summary>
            Gets or sets the timer how pathfinding system could run unmounted.<br/>
            Doesnt allow to move faster then server allows!
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.PlayerMobile.WalkMountTimer">
            <summary>
            Gets or sets the timer how pathfinding system could move mounted.<br/>
            Doesnt allow to move faster then server allows!
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.PlayerMobile.WalkUnmountTimer">
            <summary>
            Gets or sets the timer how pathfinding system could move unmounted.<br/>
            Doesnt allow to move faster then server allows!
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.PlayerMobile.LastObject">
            <summary>
            Returns reference to last used item.
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.PlayerMobile.LastTarget">
            <summary>
            Returns reference to last targeted entity.
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.PlayerMobile.LastAttackTarget">
            <summary>
            Returns reference to last combatant.
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.PlayerMobile.LastContainer">
            <summary>
            Returns reference to last used container.
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.PlayerMobile.CanRegenHits">
            <summary>
            Returns if player could regenerate hit points.
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.PlayerMobile.CanRegenStam">
            <summary>
            Returns if player could regenerate stamina.
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.PlayerMobile.CanRegenMana">
            <summary>
            Returns if player could regenerate mana.
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.PlayerMobile.ActiveAbility">
            <summary>
            Returns the current active ability as text.
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.PlayerMobile.Party">
            <summary>
            Stores reference of party system
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.PlayerMobile.Journal">
            <summary>
            Stores reference of journal sysem.
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.PlayerMobile.Trade">
            <summary>
            Stores reference of trading system.
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.PlayerMobile.Virtues">
            <summary>
            Stores reference of virtues system.
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.PlayerMobile.Targeting">
            <summary>
            Stores reference of targeting system which includes virtual targets.
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.PlayerMobile.Skills">
            <summary>
            Stores reference of skill system.
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.PlayerMobile.Client">
            <summary>
            Stores cross over reference towards game client.
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.PlayerMobile.Vendoring">
            <summary>
            Stores reference of vendoring system.
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.PlayerMobile.Movement">
            <summary>
            Stores reference of movement system.
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.PlayerMobile.Backpack">
            <summary>
            Returns player backpack object.
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.PlayerMobile.LastStatus">
            <summary>
            Stores ID of last mobile wich got a recent status update via packet and is unequal player.
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.PlayerMobile.Warmode">
            <summary>
            Gets or sets warmode on player.
            </summary>
        </member>
        <member name="P:ScriptSDK.Mobiles.PlayerMobile.Map">
            <summary>
            Returns the map location of player. Returns Map.Internal when unknown.
            </summary>
        </member>
        <member name="M:ScriptSDK.Mobiles.PlayerMobile.OpenDoor">
            <summary>
            Function performs a request to open door next to player (if possible).
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Mobiles.PlayerMobile.Bow">
            <summary>
            Performs a bow action by player.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Mobiles.PlayerMobile.Salute">
            <summary>
            Performs a salute action by player.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Mobiles.PlayerMobile.Request(ScriptSDK.Data.RequestType)">
            <summary>
            Function requests passed gump type from paperdoll.
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Mobiles.PlayerMobile.Use(System.UInt16,System.UInt16)">
            <summary>
            Function allows to use an object by passed graphic type and color regardless of location.
            </summary>
            <param name="Type"></param>
            <param name="hue"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Mobiles.PlayerMobile.Use(System.UInt16)">
            <summary>
            Function allows to use an object by passed graphic type regardless of location.
            </summary>
            <param name="Type"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Mobiles.PlayerMobile.UseFromGround(System.UInt16,System.UInt16)">
            <summary>
            Function allows to use an object by passed graphic type and color but only selecting items on ground.
            </summary>
            <param name="type"></param>
            <param name="hue"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Mobiles.PlayerMobile.Fly">
            <summary>
            Performs a toggle or untoggle of flymodus.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Mobiles.PlayerMobile.UsePrimaryAbility">
            <summary>
            Performs a request to activate the primary ability.<br/>
            TODO : Still an open BUG to be fixed by Stealth client.
            </summary>
        </member>
        <member name="M:ScriptSDK.Mobiles.PlayerMobile.UseSecondaryAbility">
            <summary>
            Performs a request to activate the secondary ability.<br/>
            TODO : Still an open BUG to be fixed by Stealth client.
            </summary>
        </member>
        <member name="M:ScriptSDK.Mobiles.PlayerMobile.Attack(ScriptSDK.Mobiles.Mobile)">
            <summary>
            Performs an attack towards passed mobile returns result of request.
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Mobiles.PlayerMobile.Attack(ScriptSDK.Serial)">
            <summary>
            Performs an attack towards passed Serial returns result of request.
            </summary>
            <param name="serial"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Mobiles.PlayerMobile.Attack(System.UInt32)">
            <summary>
            Performs an attack towards passed ID returns result of request.
            </summary>
            <param name="ID"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Mobiles.PlayerMobile.ClearHands">
            <summary>
            Performs an unequip on both hands.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Mobiles.PlayerMobile.Equip(ScriptSDK.Data.Layer,ScriptSDK.UOEntity)">
            <summary>
            Performs an equip on desired layer, returns result of process.
            </summary>
            <param name="l"></param>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Mobiles.PlayerMobile.Unequip(ScriptSDK.Data.Layer)">
            <summary>
            performs an unequip command on desired layer, returns result of process.
            </summary>
            <param name="layer"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Mobiles.PlayerMobile.BackupPaperdoll">
            <summary>
            Saves a copy of current equipped objects on paperdoll.
            </summary>
        </member>
        <member name="M:ScriptSDK.Mobiles.PlayerMobile.RestorePaperdoll">
            <summary>
            Tries to restore the previous stored image of paperdoll through BackupPaperdoll().
            </summary>
            <returns></returns>
        </member>
        <member name="P:ScriptSDK.Mobiles.PlayerMobile.DressSpeed">
            <summary>
            Describes the current used action delay on dress and undress actions.
            </summary>
        </member>
        <member name="M:ScriptSDK.Mobiles.PlayerMobile.Undress">
            <summary>
            Undress whole character.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Mobiles.PlayerMobile.UseSkill(ScriptSDK.Data.SkillName)">
            <summary>
            Performs skill action and returns result of process.
            </summary>
            <param name="sk"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Mobiles.PlayerMobile.SendText(System.String,System.UInt16)">
            <summary>
            Function allows to send an ingame message without utilizing the console input. 
            </summary>
            <param name="text"></param>
            <param name="color"></param>
        </member>
        <member name="M:ScriptSDK.Mobiles.PlayerMobile.SendText(System.String,System.Boolean)">
            <summary>
            Function allows to send an ingame message by utilizing the console input. 
            </summary>
            <param name="text"></param>
            <param name="unicode"></param>
        </member>
        <member name="M:ScriptSDK.Mobiles.PlayerMobile.ChangeStatLockState(System.Byte,System.Byte)">
            <summary>
            Function allows to change the lockstate of any stat such as STR,DEX,INT.
            </summary>
            <param name="statNum"></param>
            <param name="statState"></param>
        </member>
        <member name="M:ScriptSDK.Mobiles.PlayerMobile.ChangeStatLockState(System.Byte,ScriptSDK.Data.SkillLock)">
            <summary>
            Function allows to change the lockstate of any stat such as STR,DEX,INT.
            </summary>
            <param name="statNum"></param>
            <param name="statState"></param>
        </member>
        <member name="M:ScriptSDK.Mobiles.PlayerMobile.ChangeStatLockState(ScriptSDK.Data.Stats,System.Byte)">
            <summary>
            Function allows to change the lockstate of any stat such as STR,DEX,INT.
            </summary>
            <param name="stat"></param>
            <param name="statState"></param>
        </member>
        <member name="M:ScriptSDK.Mobiles.PlayerMobile.ChangeStatLockState(ScriptSDK.Data.Stats,ScriptSDK.Data.SkillLock)">
            <summary>
            Function allows to change the lockstate of any stat such as STR,DEX,INT.
            </summary>
            <param name="stat"></param>
            <param name="statState"></param>
        </member>
        <member name="M:ScriptSDK.Mobiles.PlayerMobile.IActiveSpell(System.String)">
            <summary>
            Function returns true if the passed text (wich describes a spell) is activated.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Mobiles.PlayerMobile.Cast(System.String)">
            <summary>
            Function performs a cast request and returns true or false if the spell is valid.
            </summary>
            <param name="spell"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Mobiles.PlayerMobile.Cast(System.String,System.UInt32)">
            Function performs a cast request and returns true or false if the spell is valid.
        </member>
        <member name="M:ScriptSDK.Mobiles.PlayerMobile.Disarm">
            <summary>
            Function performs a self disarm of wearing weapon.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ScriptSDK.Serial">
            <summary>
            Serial class contains functions and properties to handle the unique instanced ID of objects in UO.
            </summary>		
        </member>
        <member name="M:ScriptSDK.Serial.#ctor(System.UInt32)">
            <summary>
            Default constructor.
            </summary>
            <param name="serial"></param>
        </member>
        <member name="M:ScriptSDK.Serial.#ctor">
            <summary>
            Nulled constructor.
            </summary>
        </member>
        <member name="P:ScriptSDK.Serial.Value">
            <summary>
            Stores unique ID of object.
            </summary>
        </member>
        <member name="M:ScriptSDK.Serial.Equals(System.UInt32)">
            <summary>
            Allows to Compare if the value equals this objects value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Serial.ToString">
            <summary>
            Returns the Value parsed to a proper text.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Serial.CompareTo(System.Object)">
            <summary>
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Serial.CompareTo(ScriptSDK.Serial)">
            <summary>
            Function returns 0 if passed serial can be compared.
            </summary>
            <param name="serial"></param>
            <returns></returns>
        </member>
        <member name="T:ScriptSDK.Targets.EntityTarget">
            <summary>
            EntityTarget class supports the script writer to handle native targets towards objects.
            </summary>		
            <example>
                Sample describes, how to use an axe together with EntityTarget
                and convert logs to boards.
                Then print out the result.
            <code language="CSharp">
            <![CDATA[
                EntityTarget target = new EntityTarget(PlayerMobile.GetPlayer(),1500);
                Item axe = new Item(0x00000007);
                Item log = new Item(0x00000127);
                bool result = axe.DoubleClick();
                if(result)
                    result = target.Action(log); //Target to specific object
                Console.WriteLine(string.Format("Operation result is {0}",result);
            ]]>
            </code>
            </example>
        </member>
        <member name="M:ScriptSDK.Targets.EntityTarget.#ctor(ScriptSDK.UOEntity,System.Int32)">
             <summary>
            Object designer constructor.
             </summary>
        </member>
        <member name="M:ScriptSDK.Targets.EntityTarget.#ctor(System.Int32)">
             <summary>
            Default constructor.
             </summary>
        </member>
        <member name="M:ScriptSDK.Targets.EntityTarget.OnTarget(System.Object[])">
             <summary>
            Overrides base.OnTarget and handles entity targets.
                  Allowed parameters are :
                   * Object inherited from UOEntity
                   * Object inherited from Serial
                   * ID of datatype "uint"
             </summary>
        </member>
        <member name="T:ScriptSDK.Targets.Target">
            <summary>
            Abstract target class offers basical workflow for targeting system.
            </summary>		
        </member>
        <member name="P:ScriptSDK.Targets.Target.Entity">
             <summary>
            Stores reference to target owner.
             </summary>
        </member>
        <member name="P:ScriptSDK.Targets.Target.Delay">
             <summary>
            Stores target cursor delay.
             </summary>
        </member>
        <member name="P:ScriptSDK.Targets.Target.TargetState">
             <summary>
            Stores the state of target process.
             </summary>
        </member>
        <member name="M:ScriptSDK.Targets.Target.#ctor(System.Int32)">
             <summary>
            Default constructor.
             </summary>
        </member>
        <member name="M:ScriptSDK.Targets.Target.#ctor(ScriptSDK.UOEntity,System.Int32)">
             <summary>
            Object designer constructor.
             </summary>
        </member>
        <member name="M:ScriptSDK.Targets.Target.OnCancel(System.Object[])">
             <summary>
            Process function when OnTarget() failed.
             </summary>
        </member>
        <member name="M:ScriptSDK.Targets.Target.OnFinish(System.Object[])">
             <summary>
            Process function when OnTarget() succeeded.
             </summary>
        </member>
        <member name="M:ScriptSDK.Targets.Target.OnTarget(System.Object[])">
             <summary>
            Process function when target cursor appeared in time frame.
             </summary>
        </member>
        <member name="M:ScriptSDK.Targets.Target.OnTimeout(System.Object[])">
             <summary>
            Process function when target cursor appeared not in time frame.
             </summary>
        </member>
        <member name="M:ScriptSDK.Targets.Target.Action(System.Object[])">
             <summary>
            Function wich controls the targeting workflow.
             </summary>
        </member>
        <member name="T:ScriptSDK.Targets.TileTarget">
            <summary>
            TileTarget class supports the script writer to handle native targets towards locations or tile locations.
            </summary>		
            <example>
            Tile Targeting Sample #1 using native Tile and X\Y\Z coords.
            <code language="CSharp">
            <![CDATA[
                TileTarget target = new TileTarget(PlayerMobile.GetPlayer(),1500);
                Item shovel = new Item(0x00000007);
                bool result = shovel.DoubleClick();
                if(result)
                    result = target.Action(1255, 1451, 900, -90);
                Console.WriteLine(string.Format("Operation result is {0}",result);
            ]]>
            </code>
            </example>
            <example>
            Tile Targeting Sample #2 using Tile and Point3D as coords.
            <code language="CSharp">
            <![CDATA[
                TileTarget target = new TileTarget(PlayerMobile.GetPlayer(),1500);
                Item shovel = new Item(0x00000007);
                Point3D p = new Point3D(1451,900,-90);
                bool result = shovel.DoubleClick();
                if(result)
                    result = target.Action(1255,p);
                Console.WriteLine(string.Format("Operation result is {0}",result);
            ]]>
            </code>
            </example>
            <example>
            Location Targeting Sample #1 using native X\Y\Z coords.
            <code language="CSharp">
            <![CDATA[
                TileTarget target = new TileTarget(PlayerMobile.GetPlayer(),1500);
                Item shovel = new Item(0x00000007);
                bool result = shovel.DoubleClick();
                if(result)
                    result = target.Action(1451,900,-90);
                Console.WriteLine(string.Format("Operation result is {0}",result);
            ]]>
            </code>
            </example>
            <example>
            Tile Targeting Sample #2 using Point3D as coords.
            <code language="CSharp">
            <![CDATA[
                TileTarget target = new TileTarget(PlayerMobile.GetPlayer(),1500);
                Item shovel = new Item(0x00000007);
                Point3D p = new Point3D(1451,900,-90);
                bool result = shovel.DoubleClick();
                if(result)
                    result = target.Action(p);
                Console.WriteLine(string.Format("Operation result is {0}",result);
            ]]>
            </code>
            </example>
        </member>
        <member name="M:ScriptSDK.Targets.TileTarget.#ctor(ScriptSDK.UOEntity,System.Int32)">
             <summary>
            Object designer constructor.
             </summary>
        </member>
        <member name="M:ScriptSDK.Targets.TileTarget.#ctor(System.Int32)">
             <summary>
            Default constructor.
             </summary>
        </member>
        <member name="M:ScriptSDK.Targets.TileTarget.OnTarget(System.Object[])">
             <summary>
            Overrides base.OnTarget and handles tile and location targets.
                  Allowed parameters are :
                   * (Point3D Point)
                   * (ushort Tile, Point3D Point) 
                   * (int X, int Y, int Z)
                   * (Ushort Tile, int X, int Y, int Z "uint"
             </summary>
        </member>
        <member name="T:ScriptSDK.UOEntity">
            <summary>
            UOEntity class is the most raw model wich describes the functionality and properties of an object in UO.
            </summary>		
        </member>
        <member name="P:ScriptSDK.UOEntity.Serial">
            <summary>
            Returns the unique ID of object.
            </summary>
        </member>
        <member name="P:ScriptSDK.UOEntity.Location">
            <summary>
            Returns the geographical location of object.
            </summary>
        </member>
        <member name="P:ScriptSDK.UOEntity.Valid">
            <summary>
            Returns if the client knows about this object.
            </summary>
        </member>
        <member name="P:ScriptSDK.UOEntity.Direction">
            <summary>
            Returns the direction of object.
            </summary>
        </member>
        <member name="P:ScriptSDK.UOEntity.Color">
            <summary>
            Returns the ID of Color (In UO called hue).
            </summary>
        </member>
        <member name="P:ScriptSDK.UOEntity.ObjectType">
            <summary>
            Returns the ID of Graphic (In UO called object type).
            </summary>
        </member>
        <member name="P:ScriptSDK.UOEntity.Distance">
            <summary>
            Returns the distance from playter towards this object.
            </summary>
        </member>
        <member name="P:ScriptSDK.UOEntity.Properties">
            <summary>
            Stores the localized properties generated by UpdateLocalizedProperties().
            </summary>
        </member>
        <member name="P:ScriptSDK.UOEntity.Tooltip">
            <summary>
            Stores the text properties generated by UpdateTextProperties().
            </summary>
        </member>
        <member name="P:ScriptSDK.UOEntity.Layer">
            <summary>
            Returns the layer of object, if this is equipped to any paperdoll.
            </summary>
        </member>
        <member name="P:ScriptSDK.UOEntity.ContextMenu">
            <summary>
            Stores a context menu object with reference to this object.
            </summary>
        </member>
        <member name="P:ScriptSDK.UOEntity.ParsedToolTip">
            <summary>
            Returns a parsed and splitted list of text properties.
            </summary>
        </member>
        <member name="P:ScriptSDK.UOEntity.Parent">
            <summary>
            Returns the parent of object.
            </summary>
        </member>
        <member name="P:ScriptSDK.UOEntity.RootParent">
            <summary>
            Returns the top parent of object.
            </summary>
        </member>
        <member name="M:ScriptSDK.UOEntity.DoubleClick">
            <summary>
            Performs a double click onto object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.UOEntity.Click">
            <summary>
            Performs a single click onto object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.UOEntity.#ctor(System.UInt32)">
            <summary>
            Alternative constructor
            </summary>
            <param name="ObjectID"></param>
        </member>
        <member name="M:ScriptSDK.UOEntity.#ctor(ScriptSDK.Serial)">
            <summary>
            Default constructor.
            </summary>
            <param name="serial"></param>
        </member>
        <member name="M:ScriptSDK.UOEntity.AttachContextMenu">
            <summary>
            Performs attachment of object to context menu system.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.UOEntity.UpdateLocalizedProperties">
            <summary>
            Performs API-Call to read localized properties.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.UOEntity.UpdateTextProperties">
            <summary>
            Performs API-Call to read text properties.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ScriptSDK.SDK">
            <summary>
            SDK root class providing global initializers and informative constansts.
            </summary>		
            <example>
            <b>Example #1 :</b> Expose how to initialize all special systems.
            <code language="CSharp">
            <![CDATA[
                SDK.Initialize();
            ]]>
            </code>
            </example>
        </member>
        <member name="F:ScriptSDK.SDK.Revision">
            <summary>
             Stores actual release build as text
            </summary>
        </member>
        <member name="F:ScriptSDK.SDK.BuildDate">
            <summary>
            Stores timestamp of last success release build.
            </summary>
        </member>
        <member name="F:ScriptSDK.SDK.CompatibleClient">
            <summary>
            Stores text about stealth and API compability.
            </summary>
        </member>
        <member name="M:ScriptSDK.SDK.Initialize">
            <summary>
            SDK initializer which should be called one time only on first script call.
            </summary>
        </member>
        <member name="T:ScriptSDK.Utils.Geometry">
            <summary>
                Geometry class contains functions to handle geometrical tasks.
            </summary>
        </member>
        <member name="M:ScriptSDK.Utils.Geometry.GetDistanceToSqrt(ScriptSDK.Data.IPoint2D,ScriptSDK.Data.IPoint2D)">
            <summary>
                Function returns the squared distance between two points.
            </summary>
            <param name="p1"></param>
            <param name="p2"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Geometry.InRange(ScriptSDK.Data.IPoint2D,ScriptSDK.Data.IPoint2D,System.Int32)">
            <summary>
                Function returns if the two points are within passed range.
            </summary>
            <param name="p1"></param>
            <param name="p2"></param>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Geometry.InUpdateRange(ScriptSDK.Data.IPoint2D,ScriptSDK.Data.IPoint2D)">
            <summary>
                Function returns if the two points are within the packet update range of 18.
            </summary>
            <param name="p1"></param>
            <param name="p2"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Geometry.GetDirectionTo(ScriptSDK.Data.IPoint2D,System.Int32,System.Int32)">
            <summary>
                Extension returns direction object views towards passed point.
            </summary>
            <param name="p"></param>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Geometry.GetDirectionTo(ScriptSDK.Data.IPoint2D,ScriptSDK.Data.IPoint2D)">
            <summary>
                Extension returns direction object views towards passed point.
            </summary>
            <param name="p1"></param>
            <param name="p2"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Geometry.CoordsToPoint(System.String,ScriptSDK.Data.Map)">
            <summary>
                Function allows to parse coords to a specific point. This use the Runuo default acurate handling.
            </summary>
            <param name="coords"></param>
            <param name="map"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Geometry.PointToCoords(ScriptSDK.Data.Point3D,ScriptSDK.Data.Map)">
            <summary>
                Function allows to parse point to coords. This use the Runuo default acurate handling.
            </summary>
            <param name="point"></param>
            <param name="map"></param>
            <returns></returns>
        </member>
        <member name="T:ScriptSDK.Utils.Insensitive">
            <summary>
            Insensitive class contains functions and properties to compare text insensitive.
            </summary>		
        </member>
        <member name="P:ScriptSDK.Utils.Insensitive.Comparer">
            <summary>
            Stores insensitive Comperator.
            </summary>
        </member>
        <member name="M:ScriptSDK.Utils.Insensitive.Compare(System.String,System.String)">
            <summary>
            Function returns amount of matching characters between two texts.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Insensitive.Equals(System.String,System.String)">
            <summary>
            Function returns if two texts are equal.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Insensitive.StartsWith(System.String,System.String)">
            <summary>
            Function returns true if "first" text starts with "second" text.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Insensitive.EndsWith(System.String,System.String)">
            <summary>
            Function returns true if "first" text ends with "second" text.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Insensitive.Contains(System.String,System.String)">
            <summary>
            Function returns true if "first" text contains "second" text.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="T:ScriptSDK.Utils.Utility">
            <summary>
            Utility class contains random generators and text handlers.
            </summary>		
        </member>
        <member name="P:ScriptSDK.Utils.Utility.RandomGenerator">
            <summary>
            Stores RandomGenerator engine.
            </summary>
        </member>
        <member name="P:ScriptSDK.Utils.Utility.UTF8">
            <summary>
            Stores text encoder with UTF8 but without encoding.
            </summary>
        </member>
        <member name="P:ScriptSDK.Utils.Utility.UTF8WithEncoding">
            <summary>
            Stores text encoder with UTF8 but with encoding.
            </summary>
        </member>
        <member name="M:ScriptSDK.Utils.Utility.InsensitiveCompare(System.String,System.String)">
            <summary>
            Stores insensitive text comperator engine.
            </summary>
            <param name="first"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Utility.InsensitiveStartsWith(System.String,System.String)">
            <summary>
            Function returns true if "first" text starts with "second" text.
            </summary>
            <param name="first"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Utility.Seperate(System.Text.StringBuilder,System.String,System.String)">
            <summary>
            Function adds string to stringbuilder object together with a seperator between old and new text.
            </summary>
            <param name="sb"></param>
            <param name="value"></param>
            <param name="seperator"></param>
        </member>
        <member name="M:ScriptSDK.Utils.Utility.FixHtml(System.String)">
            <summary>
            Function fixes html-tags and return passed text.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Utility.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Function will perform method for each object in enumerable and pass value as parameter.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="eable"></param>
            <param name="action"></param>
        </member>
        <member name="M:ScriptSDK.Utils.Utility.ToUnixTime(System.DateTime)">
            <summary>
            Extension converts DateTime to proper UnixTime.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Utility.FormatByteAmount(System.Int64)">
            <summary>
            Function returns passed amount of totalbytes to proper data size format as text.
            </summary>
            <param name="totalBytes"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Utility.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)">
            <summary>
            Function returns custom attributes stored on a class.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="info"></param>
            <param name="inherit"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Utility.GetEnumerator``1(``0[])">
            <summary>
            Function returns array as enumerateable object.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="array"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Utility.RemoveHtml(System.String)">
            <summary>
            Function removes html-tags and return passed text.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Utility.IsNumeric(System.String)">
            <summary>
            Function returns if passed text is numeric only.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Utility.IsAlpha(System.String)">
            <summary>
            Function returns if passed text is alphabetical only.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Utility.IsAlphaNumeric(System.String)">
            <summary>
            Function returns if passed text is alpha numeric.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Utility.Shuffle``1(``0[])">
            <summary>
            Extension allows to shuffle values in passed generic array.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Utility.Shuffle``1(``0[],System.Int32,System.Int32)">
            <summary>
            Extension allows to shuffle values in passed generic array from passed index up to passed length.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="index"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Utility.GetDistanceToSqrt(ScriptSDK.Data.Point3D,ScriptSDK.Data.Point3D)">
            <summary>
            Function returns squared distance of area between two points.
            </summary>
            <param name="p1"></param>
            <param name="p2"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Utility.RandomDouble">
            <summary>
            Function returns random value between 0.* and 1.0.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Utility.GetDirection(ScriptSDK.Data.IPoint2D,ScriptSDK.Data.IPoint2D)">
            <summary>
            Function calculates the direction point "from" takes towards point "to".
            </summary>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Utility.GetArrayCap(System.Array,System.Int32)">
            <summary>
            Function returns the entry on highest array index.
            </summary>
            <param name="array"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Utility.GetArrayCap(System.Array,System.Int32,System.Object)">
            <summary>
            Function returns the entry on highest array index or emptyvalue if not possible.
            </summary>
            <param name="array"></param>
            <param name="index"></param>
            <param name="emptyValue"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Utility.Dice(System.Int32,System.Int32,System.Int32)">
            <summary>
            Rolls passed amount of dices with passed amount of sides and adds additional bonus.
            </summary>
            <param name="numDice"></param>
            <param name="numSides"></param>
            <param name="bonus"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Utility.RandomList(System.String[])">
            <summary>
            Function returns random text entry within passed list.
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Utility.RandomList(System.Int32[])">
            <summary>
            Function returns random numeric entry within passed list.
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Utility.RandomList``1(``0[])">
            <summary>
            Function returns random generic entry within passed list.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Utility.RandomBool">
            <summary>
            Function returns random boolean value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Utility.RandomMinMax(System.Int32,System.Int32)">
            <summary>
            Function returns random numeric value between two bounds.
            </summary>
            <param name="min"></param>
            <param name="max"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Utility.Random(System.Int32,System.Int32)">
            <summary>
            Function returns random numeric value. if count is 0 it returns from , count bigger 0 returns 
            random * 1 and count smaller 0 returns random * -1.  
            </summary>
            <param name="from"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Utility.Random(System.Int32)">
            <summary>
            Function returns random numeric value.
            </summary>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Utility.RangeCheck(ScriptSDK.Data.IPoint2D,ScriptSDK.Data.IPoint2D,System.Int32)">
            <summary>
            Function checks if the range between two points matchs passed range.
            </summary>
            <param name="p1"></param>
            <param name="p2"></param>
            <param name="range"></param>
            <returns></returns>
        </member>
        <member name="M:ScriptSDK.Utils.Utility.NumberBetween(System.Double,System.Int32,System.Int32,System.Double)">
            <summary>
            Function allows to check if value is between two bounds.
            </summary>
            <param name="num"></param>
            <param name="bound1"></param>
            <param name="bound2"></param>
            <param name="allowance"></param>
            <returns></returns>
        </member>
    </members>
</doc>
